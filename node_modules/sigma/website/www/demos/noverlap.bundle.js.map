{"version":3,"sources":["webpack:///webpack/runtime/chunk loaded","webpack:///../node_modules/graphology-generators/classic/empty.js","webpack:///../node_modules/graphology-layout-noverlap/defaults.js","webpack:///../node_modules/graphology-layout-noverlap/helpers.js","webpack:///../node_modules/graphology-layout-noverlap/index.js","webpack:///../node_modules/graphology-layout-noverlap/iterate.js","webpack:///../node_modules/graphology-layout-noverlap/node_modules/graphology-utils/is-graph.js","webpack:///../node_modules/graphology-layout-noverlap/webworker.js","webpack:///../node_modules/graphology-layout-noverlap/worker.js","webpack:///./noverlap.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"names":["deferred","isGraphConstructor","module","exports","GraphClass","order","Error","i","graph","addNode","gridSize","margin","expansion","ratio","speed","validateSettings","settings","message","graphToByteArray","reducer","matrix","Float32Array","j","forEachNode","node","attr","x","y","size","assignLayoutChanges","NodeMatrix","pos","mergeNodeAttributes","collectLayoutChanges","positions","createWorker","fn","xURL","window","URL","webkitURL","code","toString","objectUrl","createObjectURL","Blob","type","worker","Worker","revokeObjectURL","isGraph","iterate","helpers","DEFAULT_SETTINGS","abstractSynchronousLayout","assign","params","maxIterations","Object","validationError","inputReducer","converged","outputReducer","synchronousLayout","bind","jitter","Math","random","options","l","length","deltaX","deltaY","xMin","Infinity","yMin","xMax","yMax","min","max","width","height","xCenter","yCenter","c","nxMin","nxMax","nyMin","nyMax","xMinBox","xMaxBox","yMinBox","yMaxBox","col","row","cell","grid","Array","gridLength","floor","push","n1","n2","x1","x2","y1","y2","s1","s2","h","xDist","yDist","dist","collisions","Set","has","add","sqrt","value","addUndirectedEdgeWithKey","dropNode","multi","NODES","moduleShim","self","addEventListener","event","data","nodes","result","postMessage","buffer","workerFunction","NoverlapLayoutSupervisor","this","matrices","running","killed","callbacks","onConverged","handleMessage","alreadyRespawning","handleAddition","spawnWorker","setImmediate","on","prototype","terminate","start","stop","askForIterations","payload","buffers","kill","removeListener","NOVERLAP_SETTINGS","container","document","getElementById","UndirectedGraph","label","color","hex","renderer","createButton","text","offset","button","createElement","textContent","style","position","left","top","appendChild","key","graphToViewport","viewportToGraph","onclick","console","time","layout","timeEnd","animateNodes","duration","easing","log","supervisor","startButton","stopButton","globalize","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","id","loaded","__webpack_modules__","call","m","O","chunkIds","priority","notFulfilled","fulfilled","keys","every","splice","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","hasOwnProperty","r","Symbol","toStringTag","nmd","paths","children","installedChunks","527","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","forEach","__webpack_exports__"],"mappings":"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","file":"noverlap.bundle.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","/**\n * Graphology Empty Graph Generator\n * =================================\n *\n * Function generating empty graphs.\n */\nvar isGraphConstructor = require('graphology-utils/is-graph-constructor');\n\n/**\n * Generates an empty graph with n nodes and 0 edges.\n *\n * @param  {Class}  GraphClass - The Graph Class to instantiate.\n * @param  {number} order      - Number of nodes of the graph.\n * @return {Graph}\n */\nmodule.exports = function empty(GraphClass, order) {\n  if (!isGraphConstructor(GraphClass))\n    throw new Error('graphology-generators/classic/empty: invalid Graph constructor.');\n\n  var graph = new GraphClass();\n\n  var i;\n\n  for (i = 0; i < order; i++)\n    graph.addNode(i);\n\n  return graph;\n};\n","/**\n * Graphology Noverlap Layout Default Settings\n * ============================================\n */\nmodule.exports = {\n  gridSize: 20,\n  margin: 5,\n  expansion: 1.1,\n  ratio: 1.0,\n  speed: 3\n};\n","/**\n * Graphology Noverlap Helpers\n * ============================\n *\n * Miscellaneous helper functions.\n */\n\n/**\n * Constants.\n */\nvar PPN = 3;\n\n/**\n * Function used to validate the given settings.\n *\n * @param  {object}      settings - Settings to validate.\n * @return {object|null}\n */\nexports.validateSettings = function(settings) {\n\n  if ('gridSize' in settings &&\n      typeof settings.gridSize !== 'number' || settings.gridSize <= 0)\n    return {message: 'the `gridSize` setting should be a positive number.'};\n\n  if ('margin' in settings &&\n      typeof settings.margin !== 'number' || settings.margin < 0)\n    return {message: 'the `margin` setting should be 0 or a positive number.'};\n\n  if ('expansion' in settings &&\n      typeof settings.expansion !== 'number' || settings.expansion <= 0)\n    return {message: 'the `expansion` setting should be a positive number.'};\n\n  if ('ratio' in settings &&\n      typeof settings.ratio !== 'number' || settings.ratio <= 0)\n    return {message: 'the `ratio` setting should be a positive number.'};\n\n  if ('speed' in settings &&\n      typeof settings.speed !== 'number' || settings.speed <= 0)\n    return {message: 'the `speed` setting should be a positive number.'};\n\n  return null;\n};\n\n/**\n * Function generating a flat matrix for the given graph's nodes.\n *\n * @param  {Graph}        graph   - Target graph.\n * @param  {function}     reducer - Node reducer function.\n * @return {Float32Array}         - The node matrix.\n */\nexports.graphToByteArray = function(graph, reducer) {\n  var order = graph.order;\n\n  var matrix = new Float32Array(order * PPN);\n\n  var j = 0;\n\n  graph.forEachNode(function(node, attr) {\n    if (typeof reducer === 'function')\n      attr = reducer(node, attr);\n\n    matrix[j] = attr.x;\n    matrix[j + 1] = attr.y;\n    matrix[j + 2] = attr.size || 1;\n    j += PPN;\n  });\n\n  return matrix;\n};\n\n/**\n * Function applying the layout back to the graph.\n *\n * @param {Graph}        graph      - Target graph.\n * @param {Float32Array} NodeMatrix - Node matrix.\n * @param {function}     reducer    - Reducing function.\n */\nexports.assignLayoutChanges = function(graph, NodeMatrix, reducer) {\n  var i = 0;\n\n  graph.forEachNode(function(node) {\n    var pos = {\n      x: NodeMatrix[i],\n      y: NodeMatrix[i + 1]\n    };\n\n    if (typeof reducer === 'function')\n      pos = reducer(node, pos);\n\n    graph.mergeNodeAttributes(node, pos);\n\n    i += PPN;\n  });\n};\n\n/**\n * Function collecting the layout positions.\n *\n * @param  {Graph}        graph      - Target graph.\n * @param  {Float32Array} NodeMatrix - Node matrix.\n * @param  {function}     reducer    - Reducing function.\n * @return {object}                  - Map to node positions.\n */\nexports.collectLayoutChanges = function(graph, NodeMatrix, reducer) {\n  var positions = {};\n\n  var i = 0;\n\n  graph.forEachNode(function(node) {\n    var pos = {\n      x: NodeMatrix[i],\n      y: NodeMatrix[i + 1]\n    };\n\n    if (typeof reducer === 'function')\n      pos = reducer(node, pos);\n\n    positions[node] = pos;\n\n    i += PPN;\n  });\n\n  return positions;\n};\n\n/**\n * Function returning a web worker from the given function.\n *\n * @param  {function}  fn - Function for the worker.\n * @return {DOMString}\n */\nexports.createWorker = function createWorker(fn) {\n  var xURL = window.URL || window.webkitURL;\n  var code = fn.toString();\n  var objectUrl = xURL.createObjectURL(new Blob(['(' + code + ').call(this);'], {type: 'text/javascript'}));\n  var worker = new Worker(objectUrl);\n  xURL.revokeObjectURL(objectUrl);\n\n  return worker;\n};\n","/**\n * Graphology Noverlap Layout\n * ===========================\n *\n * Library endpoint.\n */\nvar isGraph = require('graphology-utils/is-graph'),\n    iterate = require('./iterate.js'),\n    helpers = require('./helpers.js');\n\nvar DEFAULT_SETTINGS = require('./defaults.js');\nvar DEFAULT_MAX_ITERATIONS = 500;\n\n/**\n * Asbtract function used to run a certain number of iterations.\n *\n * @param  {boolean}       assign       - Whether to assign positions.\n * @param  {Graph}         graph        - Target graph.\n * @param  {object|number} params       - If number, params.maxIterations, else:\n * @param  {number}          maxIterations - Maximum number of iterations.\n * @param  {object}          [settings] - Settings.\n * @return {object|undefined}\n */\nfunction abstractSynchronousLayout(assign, graph, params) {\n  if (!isGraph(graph))\n    throw new Error('graphology-layout-noverlap: the given graph is not a valid graphology instance.');\n\n  if (typeof params === 'number')\n    params = {maxIterations: params};\n  else\n    params = params || {};\n\n  var maxIterations = params.maxIterations || DEFAULT_MAX_ITERATIONS;\n\n  if (typeof maxIterations !== 'number')\n    throw new Error('graphology-layout-noverlap: invalid number of maximum iterations.');\n\n  if (maxIterations <= 0)\n    throw new Error('graphology-layout-noverlap: you should provide a positive number of maximum iterations.');\n\n  // Validating settings\n  var settings = Object.assign({}, DEFAULT_SETTINGS, params.settings),\n      validationError = helpers.validateSettings(settings);\n\n  if (validationError)\n    throw new Error('graphology-layout-noverlap: ' + validationError.message);\n\n  // Building matrices\n  var matrix = helpers.graphToByteArray(graph, params.inputReducer),\n      converged = false,\n      i;\n\n  // Iterating\n  for (i = 0; i < maxIterations && !converged; i++)\n    converged = iterate(settings, matrix).converged;\n\n  // Applying\n  if (assign) {\n    helpers.assignLayoutChanges(graph, matrix, params.outputReducer);\n    return;\n  }\n\n  return helpers.collectLayoutChanges(graph, matrix, params.outputReducer);\n}\n\n/**\n * Exporting.\n */\nvar synchronousLayout = abstractSynchronousLayout.bind(null, false);\nsynchronousLayout.assign = abstractSynchronousLayout.bind(null, true);\n\nmodule.exports = synchronousLayout;\n","/**\n * Graphology Noverlap Iteration\n * ==============================\n *\n * Function used to perform a single iteration of the algorithm.\n */\n\n/**\n * Matrices properties accessors.\n */\nvar NODE_X = 0,\n    NODE_Y = 1,\n    NODE_SIZE = 2;\n\n/**\n * Constants.\n */\nvar PPN = 3;\n\n/**\n * Helpers.\n */\nfunction hashPair(a, b) {\n  return a + '§' + b;\n}\n\nfunction jitter() {\n  return 0.01 * (0.5 - Math.random());\n}\n\n/**\n * Function used to perform a single interation of the algorithm.\n *\n * @param  {object}       options    - Layout options.\n * @param  {Float32Array} NodeMatrix - Node data.\n * @return {object}                  - Some metadata.\n */\nmodule.exports = function iterate(options, NodeMatrix) {\n\n  // Caching options\n  var margin = options.margin;\n  var ratio = options.ratio;\n  var expansion = options.expansion;\n  var gridSize = options.gridSize; // TODO: decrease grid size when few nodes?\n  var speed = options.speed;\n\n  // Generic iteration variables\n  var i, j, x, y, l, size;\n  var converged = true;\n\n  var length = NodeMatrix.length;\n  var order = (length / PPN) | 0;\n\n  var deltaX = new Float32Array(order);\n  var deltaY = new Float32Array(order);\n\n  // Finding the extents of our space\n  var xMin = Infinity;\n  var yMin = Infinity;\n  var xMax = -Infinity;\n  var yMax = -Infinity;\n\n  for (i = 0; i < length; i += PPN) {\n    x = NodeMatrix[i + NODE_X];\n    y = NodeMatrix[i + NODE_Y];\n    size = NodeMatrix[i + NODE_SIZE] * ratio + margin;\n\n    xMin = Math.min(xMin, x - size);\n    xMax = Math.max(xMax, x + size);\n    yMin = Math.min(yMin, y - size);\n    yMax = Math.max(yMax, y + size);\n  }\n\n  var width = xMax - xMin;\n  var height = yMax - yMin;\n  var xCenter = (xMin + xMax) / 2;\n  var yCenter = (yMin + yMax) / 2;\n\n  xMin = xCenter - expansion * width / 2;\n  xMax = xCenter + expansion * width / 2;\n  yMin = yCenter - expansion * height / 2;\n  yMax = yCenter + expansion * height / 2;\n\n  // Building grid\n  var grid = new Array(gridSize * gridSize),\n      gridLength = grid.length,\n      c;\n\n  for (c = 0; c < gridLength; c++)\n    grid[c] = [];\n\n  var nxMin, nxMax, nyMin, nyMax;\n  var xMinBox, xMaxBox, yMinBox, yMaxBox;\n\n  var col, row;\n\n  for (i = 0; i < length; i += PPN) {\n    x = NodeMatrix[i + NODE_X];\n    y = NodeMatrix[i + NODE_Y];\n    size = NodeMatrix[i + NODE_SIZE] * ratio + margin;\n\n    nxMin = x - size;\n    nxMax = x + size;\n    nyMin = y - size;\n    nyMax = y + size;\n\n    xMinBox = Math.floor(gridSize * (nxMin - xMin) / (xMax - xMin));\n    xMaxBox = Math.floor(gridSize * (nxMax - xMin) / (xMax - xMin));\n    yMinBox = Math.floor(gridSize * (nyMin - yMin) / (yMax - yMin));\n    yMaxBox = Math.floor(gridSize * (nyMax - yMin) / (yMax - yMin));\n\n    for (col = xMinBox; col <= xMaxBox; col++) {\n      for (row = yMinBox; row <= yMaxBox; row++) {\n        grid[col * gridSize + row].push(i);\n      }\n    }\n  }\n\n  // Computing collisions\n  var cell;\n\n  var collisions = new Set();\n\n  var n1, n2, x1, x2, y1, y2, s1, s2, h;\n\n  var xDist, yDist, dist, collision;\n\n  for (c = 0; c < gridLength; c++) {\n    cell = grid[c];\n\n    for (i = 0, l = cell.length; i < l; i++) {\n      n1 = cell[i];\n\n      x1 = NodeMatrix[n1 + NODE_X];\n      y1 = NodeMatrix[n1 + NODE_Y];\n      s1 = NodeMatrix[n1 + NODE_SIZE];\n\n      for (j = i + 1; j < l; j++) {\n        n2 = cell[j];\n        h = hashPair(n1, n2);\n\n        if (gridLength > 1 && collisions.has(h))\n          continue;\n\n        if (gridLength > 1)\n          collisions.add(h);\n\n        x2 = NodeMatrix[n2 + NODE_X];\n        y2 = NodeMatrix[n2 + NODE_Y];\n        s2 = NodeMatrix[n2 + NODE_SIZE];\n\n        xDist = x2 - x1;\n        yDist = y2 - y1;\n        dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        collision = dist < (\n          (s1 * ratio + margin) +\n          (s2 * ratio + margin)\n        );\n\n        if (collision) {\n          converged = false;\n\n          n2 = (n2 / PPN) | 0;\n\n          if (dist > 0) {\n            deltaX[n2] += xDist / dist * (1 + s1);\n            deltaY[n2] += yDist / dist * (1 + s1);\n          }\n          else {\n            // Nodes are on the exact same spot, we need to jitter a bit\n            deltaX[n2] += width * jitter();\n            deltaY[n2] += height * jitter();\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0, j = 0; i < length; i += PPN, j++) {\n    NodeMatrix[i + NODE_X] += deltaX[j] * 0.1 * speed;\n    NodeMatrix[i + NODE_Y] += deltaY[j] * 0.1 * speed;\n  }\n\n  return {converged: converged};\n};\n","/**\n * Graphology isGraph\n * ===================\n *\n * Very simple function aiming at ensuring the given variable is a\n * graphology instance.\n */\n\n/**\n * Checking the value is a graphology instance.\n *\n * @param  {any}     value - Target value.\n * @return {boolean}\n */\nmodule.exports = function isGraph(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.addUndirectedEdgeWithKey === 'function' &&\n    typeof value.dropNode === 'function' &&\n    typeof value.multi === 'boolean'\n  );\n};\n","/**\n * Graphology Noverlap Layout Webworker\n * =====================================\n *\n * Web worker able to run the layout in a separate thread.\n */\nmodule.exports = function worker() {\n  var NODES;\n\n  var moduleShim = {};\n\n  (function() {\n    /**\n * Graphology Noverlap Iteration\n * ==============================\n *\n * Function used to perform a single iteration of the algorithm.\n */\n\n/**\n * Matrices properties accessors.\n */\nvar NODE_X = 0,\n    NODE_Y = 1,\n    NODE_SIZE = 2;\n\n/**\n * Constants.\n */\nvar PPN = 3;\n\n/**\n * Helpers.\n */\nfunction hashPair(a, b) {\n  return a + '§' + b;\n}\n\nfunction jitter() {\n  return 0.01 * (0.5 - Math.random());\n}\n\n/**\n * Function used to perform a single interation of the algorithm.\n *\n * @param  {object}       options    - Layout options.\n * @param  {Float32Array} NodeMatrix - Node data.\n * @return {object}                  - Some metadata.\n */\nmoduleShim.exports = function iterate(options, NodeMatrix) {\n\n  // Caching options\n  var margin = options.margin;\n  var ratio = options.ratio;\n  var expansion = options.expansion;\n  var gridSize = options.gridSize; // TODO: decrease grid size when few nodes?\n  var speed = options.speed;\n\n  // Generic iteration variables\n  var i, j, x, y, l, size;\n  var converged = true;\n\n  var length = NodeMatrix.length;\n  var order = (length / PPN) | 0;\n\n  var deltaX = new Float32Array(order);\n  var deltaY = new Float32Array(order);\n\n  // Finding the extents of our space\n  var xMin = Infinity;\n  var yMin = Infinity;\n  var xMax = -Infinity;\n  var yMax = -Infinity;\n\n  for (i = 0; i < length; i += PPN) {\n    x = NodeMatrix[i + NODE_X];\n    y = NodeMatrix[i + NODE_Y];\n    size = NodeMatrix[i + NODE_SIZE] * ratio + margin;\n\n    xMin = Math.min(xMin, x - size);\n    xMax = Math.max(xMax, x + size);\n    yMin = Math.min(yMin, y - size);\n    yMax = Math.max(yMax, y + size);\n  }\n\n  var width = xMax - xMin;\n  var height = yMax - yMin;\n  var xCenter = (xMin + xMax) / 2;\n  var yCenter = (yMin + yMax) / 2;\n\n  xMin = xCenter - expansion * width / 2;\n  xMax = xCenter + expansion * width / 2;\n  yMin = yCenter - expansion * height / 2;\n  yMax = yCenter + expansion * height / 2;\n\n  // Building grid\n  var grid = new Array(gridSize * gridSize),\n      gridLength = grid.length,\n      c;\n\n  for (c = 0; c < gridLength; c++)\n    grid[c] = [];\n\n  var nxMin, nxMax, nyMin, nyMax;\n  var xMinBox, xMaxBox, yMinBox, yMaxBox;\n\n  var col, row;\n\n  for (i = 0; i < length; i += PPN) {\n    x = NodeMatrix[i + NODE_X];\n    y = NodeMatrix[i + NODE_Y];\n    size = NodeMatrix[i + NODE_SIZE] * ratio + margin;\n\n    nxMin = x - size;\n    nxMax = x + size;\n    nyMin = y - size;\n    nyMax = y + size;\n\n    xMinBox = Math.floor(gridSize * (nxMin - xMin) / (xMax - xMin));\n    xMaxBox = Math.floor(gridSize * (nxMax - xMin) / (xMax - xMin));\n    yMinBox = Math.floor(gridSize * (nyMin - yMin) / (yMax - yMin));\n    yMaxBox = Math.floor(gridSize * (nyMax - yMin) / (yMax - yMin));\n\n    for (col = xMinBox; col <= xMaxBox; col++) {\n      for (row = yMinBox; row <= yMaxBox; row++) {\n        grid[col * gridSize + row].push(i);\n      }\n    }\n  }\n\n  // Computing collisions\n  var cell;\n\n  var collisions = new Set();\n\n  var n1, n2, x1, x2, y1, y2, s1, s2, h;\n\n  var xDist, yDist, dist, collision;\n\n  for (c = 0; c < gridLength; c++) {\n    cell = grid[c];\n\n    for (i = 0, l = cell.length; i < l; i++) {\n      n1 = cell[i];\n\n      x1 = NodeMatrix[n1 + NODE_X];\n      y1 = NodeMatrix[n1 + NODE_Y];\n      s1 = NodeMatrix[n1 + NODE_SIZE];\n\n      for (j = i + 1; j < l; j++) {\n        n2 = cell[j];\n        h = hashPair(n1, n2);\n\n        if (gridLength > 1 && collisions.has(h))\n          continue;\n\n        if (gridLength > 1)\n          collisions.add(h);\n\n        x2 = NodeMatrix[n2 + NODE_X];\n        y2 = NodeMatrix[n2 + NODE_Y];\n        s2 = NodeMatrix[n2 + NODE_SIZE];\n\n        xDist = x2 - x1;\n        yDist = y2 - y1;\n        dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        collision = dist < (\n          (s1 * ratio + margin) +\n          (s2 * ratio + margin)\n        );\n\n        if (collision) {\n          converged = false;\n\n          n2 = (n2 / PPN) | 0;\n\n          if (dist > 0) {\n            deltaX[n2] += xDist / dist * (1 + s1);\n            deltaY[n2] += yDist / dist * (1 + s1);\n          }\n          else {\n            // Nodes are on the exact same spot, we need to jitter a bit\n            deltaX[n2] += width * jitter();\n            deltaY[n2] += height * jitter();\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0, j = 0; i < length; i += PPN, j++) {\n    NodeMatrix[i + NODE_X] += deltaX[j] * 0.1 * speed;\n    NodeMatrix[i + NODE_Y] += deltaY[j] * 0.1 * speed;\n  }\n\n  return {converged: converged};\n};\n\n  })();\n\n  var iterate = moduleShim.exports;\n\n  self.addEventListener('message', function(event) {\n    var data = event.data;\n\n    NODES = new Float32Array(data.nodes);\n\n    // Running the iteration\n    var result = iterate(\n      data.settings,\n      NODES\n    );\n\n    // Sending result to supervisor\n    self.postMessage({\n      result: result,\n      nodes: NODES.buffer\n    }, [NODES.buffer]);\n  });\n};\n\n","/**\n * Graphology Noverlap Layout Supervisor\n * ======================================\n *\n * Supervisor class able to spawn a web worker to run the Noverlap layout in a\n * separate thread not to block UI with heavy synchronous computations.\n */\nvar workerFunction = require('./webworker.js'),\n    isGraph = require('graphology-utils/is-graph'),\n    helpers = require('./helpers.js');\n\nvar DEFAULT_SETTINGS = require('./defaults.js');\n\n/**\n * Class representing a Noverlap layout run by a webworker.\n *\n * @constructor\n * @param  {Graph}         graph        - Target graph.\n * @param  {object|number} params       - Parameters:\n * @param  {object}          [settings] - Settings.\n */\nfunction NoverlapLayoutSupervisor(graph, params) {\n  params = params || {};\n\n  // Validation\n  if (!isGraph(graph))\n    throw new Error('graphology-layout-noverlap/worker: the given graph is not a valid graphology instance.');\n\n  // Validating settings\n  var settings = Object.assign({}, DEFAULT_SETTINGS, params.settings),\n      validationError = helpers.validateSettings(settings);\n\n  if (validationError)\n    throw new Error('graphology-layout-noverlap/worker: ' + validationError.message);\n\n  // Properties\n  this.worker = null;\n  this.graph = graph;\n  this.settings = settings;\n  this.matrices = null;\n  this.converged = false;\n  this.running = false;\n  this.killed = false;\n\n  this.inputReducer = params.inputReducer;\n  this.outputReducer = params.outputReducer;\n\n  this.callbacks = {\n    onConverged: typeof params.onConverged === 'function' ? params.onConverged : null\n  };\n\n  // Binding listeners\n  this.handleMessage = this.handleMessage.bind(this);\n\n  var alreadyRespawning = false;\n  var self = this;\n\n  this.handleAddition = function() {\n    if (alreadyRespawning)\n      return;\n\n    alreadyRespawning = true;\n\n    self.spawnWorker();\n    setImmediate(function() {\n      alreadyRespawning = false;\n    });\n  };\n\n  graph.on('nodeAdded', this.handleAddition);\n  graph.on('edgeAdded', this.handleAddition);\n\n  // Spawning worker\n  this.spawnWorker();\n}\n\n/**\n * Internal method used to spawn the web worker.\n */\nNoverlapLayoutSupervisor.prototype.spawnWorker = function() {\n  if (this.worker)\n    this.worker.terminate();\n\n  this.worker = helpers.createWorker(workerFunction);\n  this.worker.addEventListener('message', this.handleMessage);\n\n  if (this.running) {\n    this.running = false;\n    this.start();\n  }\n};\n\n/**\n * Internal method used to handle the worker's messages.\n *\n * @param {object} event - Event to handle.\n */\nNoverlapLayoutSupervisor.prototype.handleMessage = function(event) {\n  if (!this.running)\n    return;\n\n  var matrix = new Float32Array(event.data.nodes);\n\n  helpers.assignLayoutChanges(this.graph, matrix, this.outputReducer);\n  this.matrices.nodes = matrix;\n\n  this.converged = event.data.result.converged;\n\n  if (event.data.result.converged) {\n    if (this.callbacks.onConverged)\n      this.callbacks.onConverged();\n\n    this.stop();\n    return;\n  }\n\n  // Looping\n  this.askForIterations();\n};\n\n/**\n * Internal method used to ask for iterations from the worker.\n *\n * @return {NoverlapLayoutSupervisor}\n */\nNoverlapLayoutSupervisor.prototype.askForIterations = function() {\n  var matrices = this.matrices;\n\n  var payload = {\n    settings: this.settings,\n    nodes: matrices.nodes.buffer\n  };\n\n  var buffers = [matrices.nodes.buffer];\n\n  this.worker.postMessage(payload, buffers);\n\n  return this;\n};\n\n/**\n * Method used to start the layout.\n *\n * @return {NoverlapLayoutSupervisor}\n */\nNoverlapLayoutSupervisor.prototype.start = function() {\n  if (this.killed)\n    throw new Error('graphology-layout-noverlap/worker.start: layout was killed.');\n\n  if (this.running)\n    return this;\n\n  // Building matrices\n  this.matrices = {\n    nodes: helpers.graphToByteArray(this.graph, this.inputReducer)\n  };\n\n  this.running = true;\n  this.askForIterations();\n\n  return this;\n};\n\n/**\n * Method used to stop the layout.\n *\n * @return {NoverlapLayoutSupervisor}\n */\nNoverlapLayoutSupervisor.prototype.stop = function() {\n  this.running = false;\n\n  return this;\n};\n\n/**\n * Method used to kill the layout.\n *\n * @return {NoverlapLayoutSupervisor}\n */\nNoverlapLayoutSupervisor.prototype.kill = function() {\n  if (this.killed)\n    return this;\n\n  this.running = false;\n  this.killed = true;\n\n  // Clearing memory\n  this.matrices = null;\n\n  // Terminating worker\n  this.worker.terminate();\n\n  // Unbinding listeners\n  this.graph.removeListener('nodeAdded', this.handleAddition);\n  this.graph.removeListener('edgeAdded', this.handleAddition);\n};\n\n/**\n * Exporting.\n */\nmodule.exports = NoverlapLayoutSupervisor;\n","import { UndirectedGraph } from \"graphology\";\nimport randomLayout from \"graphology-layout/random\";\nimport empty from \"graphology-generators/classic/empty\";\nimport noverlap, { NoverlapNodeReducer } from \"graphology-layout-noverlap\";\nimport NoverlapLayoutSupervisor from \"graphology-layout-noverlap/worker\";\nimport chroma from \"chroma-js\";\nimport random from \"pandemonium/random\";\n\nimport Sigma from \"sigma\";\nimport { animateNodes } from \"sigma/utils/animate\";\n\nimport { globalize } from \"./utils\";\n\nconst NOVERLAP_SETTINGS = {\n  margin: 2,\n  ratio: 1,\n  speed: 3,\n};\n\nconst container = document.getElementById(\"container\") as HTMLDivElement;\n\nconst graph = empty(UndirectedGraph, 1000);\nrandomLayout.assign(graph);\n\ngraph.forEachNode((node) => {\n  graph.mergeNodeAttributes(node, {\n    label: node,\n    size: random(2, 10),\n    color: chroma.random().hex(),\n  });\n});\n\nconst renderer = new Sigma(graph, container);\n\nfunction createButton(text: string, offset: number) {\n  const button = document.createElement(\"button\");\n  button.textContent = text;\n  button.style.position = \"absolute\";\n  button.style.left = \"10px\";\n\n  let top = 10;\n\n  top += offset * 40;\n\n  button.style.top = `${top}px`;\n\n  container.appendChild(button);\n\n  return button;\n}\n\nconst inputReducer: NoverlapNodeReducer = (key, attr) => {\n  return { ...attr, ...renderer.graphToViewport(attr) };\n};\n\nconst outputReducer: NoverlapNodeReducer = (key, attr) => {\n  return { ...attr, ...renderer.viewportToGraph(attr) };\n};\n\nconst fixedButton = createButton(\"noverlap 500\", 0);\n\nfixedButton.onclick = () => {\n  console.time(\"noverlap\");\n  const layout = noverlap(graph, { inputReducer, outputReducer, maxIterations: 500, settings: NOVERLAP_SETTINGS });\n  console.timeEnd(\"noverlap\");\n\n  animateNodes(graph, layout, { duration: 100, easing: \"linear\" }, () => console.log(\"done\"));\n};\n\nconst supervisor = new NoverlapLayoutSupervisor(graph, { inputReducer, outputReducer, settings: NOVERLAP_SETTINGS });\n\nconst startButton = createButton(\"start\", 1);\nconst stopButton = createButton(\"stop\", 2);\n\nstartButton.onclick = () => {\n  supervisor.start();\n};\n\nstopButton.onclick = () => {\n  supervisor.stop();\n};\n\nglobalize({ graph, renderer });\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t527: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [351], () => (__webpack_require__(5639)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}