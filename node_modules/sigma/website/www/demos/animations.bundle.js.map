{"version":3,"sources":["webpack:///webpack/runtime/chunk loaded","webpack:///../node_modules/d3-array/src/range.js","webpack:///../node_modules/d3-scale/src/init.js","webpack:///../node_modules/d3-scale/src/ordinal.js","webpack:///../node_modules/d3-scale/src/band.js","webpack:///../node_modules/d3-array/src/ticks.js","webpack:///../node_modules/d3-array/src/ascending.js","webpack:///../node_modules/d3-array/src/bisector.js","webpack:///../node_modules/d3-array/src/number.js","webpack:///../node_modules/d3-array/src/bisect.js","webpack:///../node_modules/d3-color/src/define.js","webpack:///../node_modules/d3-color/src/color.js","webpack:///../node_modules/d3-interpolate/src/basis.js","webpack:///../node_modules/d3-interpolate/src/constant.js","webpack:///../node_modules/d3-interpolate/src/color.js","webpack:///../node_modules/d3-interpolate/src/rgb.js","webpack:///../node_modules/d3-interpolate/src/array.js","webpack:///../node_modules/d3-interpolate/src/date.js","webpack:///../node_modules/d3-interpolate/src/number.js","webpack:///../node_modules/d3-interpolate/src/object.js","webpack:///../node_modules/d3-interpolate/src/basisClosed.js","webpack:///../node_modules/d3-interpolate/src/string.js","webpack:///../node_modules/d3-interpolate/src/numberArray.js","webpack:///../node_modules/d3-interpolate/src/value.js","webpack:///../node_modules/d3-interpolate/src/round.js","webpack:///../node_modules/d3-scale/src/number.js","webpack:///../node_modules/d3-scale/src/continuous.js","webpack:///../node_modules/d3-scale/src/constant.js","webpack:///../node_modules/d3-format/src/formatSpecifier.js","webpack:///../node_modules/d3-format/src/formatPrefixAuto.js","webpack:///../node_modules/d3-format/src/formatDecimal.js","webpack:///../node_modules/d3-format/src/exponent.js","webpack:///../node_modules/d3-format/src/formatRounded.js","webpack:///../node_modules/d3-format/src/formatTypes.js","webpack:///../node_modules/d3-format/src/identity.js","webpack:///../node_modules/d3-format/src/locale.js","webpack:///../node_modules/d3-format/src/defaultLocale.js","webpack:///../node_modules/d3-scale/src/tickFormat.js","webpack:///../node_modules/d3-format/src/precisionPrefix.js","webpack:///../node_modules/d3-format/src/precisionRound.js","webpack:///../node_modules/d3-format/src/precisionFixed.js","webpack:///../node_modules/d3-scale/src/linear.js","webpack:///../node_modules/d3-scale/src/identity.js","webpack:///../node_modules/d3-scale/src/nice.js","webpack:///../node_modules/d3-scale/src/log.js","webpack:///../node_modules/d3-scale/src/symlog.js","webpack:///../node_modules/d3-scale/src/pow.js","webpack:///../node_modules/d3-scale/src/radial.js","webpack:///../node_modules/d3-array/src/max.js","webpack:///../node_modules/d3-array/src/min.js","webpack:///../node_modules/d3-array/src/quickselect.js","webpack:///../node_modules/d3-array/src/quantile.js","webpack:///../node_modules/d3-scale/src/quantile.js","webpack:///../node_modules/d3-scale/src/quantize.js","webpack:///../node_modules/d3-scale/src/threshold.js","webpack:///../node_modules/d3-format/src/formatGroup.js","webpack:///../node_modules/d3-format/src/formatNumerals.js","webpack:///../node_modules/d3-format/src/formatTrim.js","webpack:///../node_modules/d3-time/src/duration.js","webpack:///../node_modules/d3-time/src/interval.js","webpack:///../node_modules/d3-time/src/millisecond.js","webpack:///../node_modules/d3-time/src/second.js","webpack:///../node_modules/d3-time/src/minute.js","webpack:///../node_modules/d3-time/src/hour.js","webpack:///../node_modules/d3-time/src/day.js","webpack:///../node_modules/d3-time/src/week.js","webpack:///../node_modules/d3-time/src/month.js","webpack:///../node_modules/d3-time/src/year.js","webpack:///../node_modules/d3-time/src/utcMinute.js","webpack:///../node_modules/d3-time/src/utcHour.js","webpack:///../node_modules/d3-time/src/utcDay.js","webpack:///../node_modules/d3-time/src/utcWeek.js","webpack:///../node_modules/d3-time/src/utcMonth.js","webpack:///../node_modules/d3-time/src/utcYear.js","webpack:///../node_modules/d3-time/src/ticks.js","webpack:///../node_modules/d3-time-format/src/locale.js","webpack:///../node_modules/d3-time-format/src/defaultLocale.js","webpack:///../node_modules/d3-scale/src/time.js","webpack:///../node_modules/d3-scale/src/utcTime.js","webpack:///../node_modules/d3-scale/src/sequential.js","webpack:///../node_modules/d3-scale/src/sequentialQuantile.js","webpack:///../node_modules/d3-interpolate/src/piecewise.js","webpack:///../node_modules/d3-scale/src/diverging.js","webpack:///../node_modules/graphology-layout/circular.js","webpack:///../node_modules/simple-statistics/dist/simple-statistics.js","webpack:///./animations.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"names":["deferred","start","stop","step","n","arguments","length","i","Math","max","ceil","range","Array","initRange","domain","this","initInterpolator","interpolator","implicit","Symbol","ordinal","index","Map","unknown","scale","d","key","get","set","push","_","slice","value","has","from","copy","apply","band","bandwidth","undefined","ordinalRange","r0","r1","round","paddingInner","paddingOuter","align","rescale","reverse","floor","values","map","rangeRound","padding","min","pointish","point","e10","sqrt","e5","e2","count","ticks","tickIncrement","isFinite","power","log","LN10","error","pow","tickStep","step0","abs","step1","a","b","NaN","f","delta","compare","left","x","lo","hi","mid","ascending","ascendingComparator","center","right","ascendingBisect","bisector","bisectRight","number","constructor","factory","prototype","extend","parent","definition","Object","create","Color","darker","brighter","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color","format","m","l","trim","toLowerCase","exec","parseInt","rgbn","Rgb","rgba","hsla","hasOwnProperty","r","g","rgbConvert","o","opacity","rgb_formatHex","hex","rgb_formatRgb","isNaN","toString","h","s","Hsl","hslConvert","hsl2rgb","m1","m2","basis","t1","v0","v1","v2","v3","t2","t3","channels","assign","displayable","formatHsl","k","nogamma","t","linear","rgbGamma","y","exponential","gamma","end","rgbSpline","spline","colors","genericArray","nb","na","c","Date","setTime","reA","reB","source","am","bm","bs","bi","lastIndex","q","one","zero","join","string","date","ArrayBuffer","isView","DataView","isArray","valueOf","object","unit","identity","normalize","bimap","interpolate","d0","d1","polymap","j","bisect","target","clamp","transformer","transform","untransform","piecewise","output","input","invert","u","continuous","prefixExponent","re","formatSpecifier","specifier","match","Error","FormatSpecifier","fill","sign","symbol","width","comma","precision","type","formatDecimalParts","p","toExponential","indexOf","coefficient","exponent","toFixed","toLocaleString","replace","toPrecision","formatRounded","toUpperCase","formatPrefix","prefixes","tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","nice","prestep","i0","i1","maxIter","interval","x0","x1","transformLog","transformExp","exp","transformLogn","transformExpn","pow10","reflect","loggish","logs","pows","base","E","log10","log2","logp","powp","v","z","Infinity","transformSymlog","log1p","transformSymexp","expm1","symlogish","constant","symlog","transformPow","transformSqrt","transformSquare","powish","square","unsquare","radial","squared","valueof","quickselect","array","sd","swap","quantile","Float64Array","numbers","value0","subarray","quantileSorted","thresholds","invertExtent","sort","quantiles","quantize","threshold","locale","grouping","thousands","group","call","Number","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","String","percent","minus","nan","newFormat","formatTypes","prefix","test","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","out","formatTrim","charCodeAt","e","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationYear","t0","newInterval","floori","offseti","field","offset","previous","filter","every","millisecond","second","getMilliseconds","getUTCSeconds","minute","getSeconds","getMinutes","hour","getHours","day","setHours","setDate","getDate","getTimezoneOffset","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month","setMonth","getMonth","getFullYear","year","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","ticker","week","tickIntervals","tickInterval","utcTicks","utcTickInterval","timeTicks","timeTickInterval","localDate","H","M","S","L","utcDate","UTC","newDate","timeFormat","utcFormat","pads","numberRe","percentRe","requoteRe","pad","requote","formatRe","names","formatLookup","name","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseQuarter","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","dISO","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","formatYear","formatYearISO","formatFullYear","formatFullYearISO","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","UTCdISO","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCYearISO","formatUTCFullYear","formatUTCFullYearISO","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","time","utcTime","k10","sequential","sequentialLog","sequentialSymlog","sequentialPow","sequentialSqrt","sequentialQuantile","I","k21","x2","r2","diverging","divergingLog","divergingSymlog","divergingPow","divergingSqrt","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","utcFormats","parses","parseSpecifier","charAt","newParse","parse","X","utcParse","formatLocale","defaults","isGraph","DEFAULTS","attributes","genericCircularLayout","graph","options","node","positions","nodes","tau","PI","cos","sin","setNodeAttribute","circularLayout","bind","module","exports","sum","transition","correction","mean","sumNthPowerDeviations","tempValue","meanValue","variance","standardDeviation","modeSorted","sorted","last","maxSeen","seenThis","numericSort","sumSimple","idx","arr","tmp","indices","quantileIndex","stack","pop","quantileSelect","multiQuantileSelect","results","len","quantileRankSorted","lowerBound","upperBound","interquartileRange","q1","q2","median","medianAbsoluteDeviation","medianValue","medianAbsoluteDeviations","shuffleInPlace","randomSource","random","temporary","shuffle","sample","makeMatrix","columns","rows","matrix","column","uniqueCountSorted","lastSeenValue","uniqueValueCount","ssq","sums","sumsOfSquares","sji","muji","fillMatrixColumn","iMin","iMax","cluster","backtrackMatrix","jlow","ssqjlow","ssqj","jhigh","sampleCovariance","xmean","ymean","sampleVariance","sampleStandardDeviation","sampleVarianceX","sampleCorrelation","combineMeans","mean1","n1","mean2","n2","meanSimple","rootMeanSquare","sumOfSquares","defineProperty","BayesianClassifier","totalCount","data","train","item","category","score","odds","oddsSums","combination","PerceptronModel","weights","bias","predict","features","label","prediction","gradient","epsilon","factorial","accumulator","COEFFICIENTS","LOGSQRT2PI","chiSquaredDistributionTable","1","0.995","0.99","0.975","0.95","0.9","0.5","0.1","0.05","0.025","0.01","0.005","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","40","50","60","70","80","90","100","SQRT_2PI$1","kernels","gaussian","bandwidthMethods","nrd","iqr","kernelDensityEstimation","kernel","bandwidthMethod","kernelFn","SQRT_2PI","cumulativeDistribution","standardNormalTable","errorFunction","inverseErrorFunction","inv","TypeError","euclideanDistance","diff","labelPoints","points","centroids","minDist","MAX_VALUE","dist","calculateCentroids","labels","numCluster","dimension","counts","numPoints","current","i$1","centroid","j$1","calculateChange","total","silhouette","groupings","numGroups","result","createGroups","distances","calculateAllDistances","meanDistanceFromPointToGroup","meanDistanceToNearestGroup","which","relativeError","actual","expected","addToMean","newValue","approxEqual","tolerance","average","averageSimple","bayesian","bernoulliDistribution","binomialDistribution","trials","probability","cumulativeProbability","cells","binomialCoefficient","func","maxIterations","errorTolerance","chiSquaredGoodnessOfFit","distributionType","significance","chiSquared","hypothesizedDistribution","observedFrequencies","expectedFrequencies","k$1","k$2","degreesOfFreedom","chunk","chunkSize","ckmeans","nClusters","nValues","shift","shiftedValue","fillMatrices","clusters","clusterRight","clusterLeft","coefficientOfVariation","combinations","subI","subsetCombinations","next","combinationList","unshift","combinationsReplacement","concat","combineVariances","variance1","variance2","newMean","cumulativeStdLogisticProbability","cumulativeStdNormalProbability","absZ","equalIntervalBreaks","nClasses","theMin","theMax","breaks","breakSize","erf","extent","extentSorted","isInteger","seriesDenom","gammaln","geometricMean","harmonicMean","reciprocalSum","kMeansCluster","oldCentroids","newCentroids","change","kde","linearRegression","dataLength","sumX","sumY","sumXX","sumXY","linearRegressionLine","mb","logAverage","logit","mad","maxSorted","medianSorted","minSorted","mode","modeFast","modeCount","newCount","perceptron","permutationTest","sampleX","sampleY","alternative","testStatistic","testStatDsn","allData","midIndex","permLeft","permRight","permTestStatistic","numExtremeTStats","i$2","i$3","permutationsHeap","elements","indexes","permutations","swapFrom","temp","poissonDistribution","lambda","factorialX","probit","product","quantileRank","rSquared","err","rms","sampleKurtosis","secondCentralMoment","fourthCentralMoment","sampleRankCorrelation","xIndexes","pair","yIndexes","xRanks","yRanks","sampleSkewness","sumSquaredDeviations","sumCubedDeviations","besselsCorrection","theSampleStandardDeviation","sampleWithReplacement","silhouetteMetric","subtractFromMean","tTest","expectedValue","tTestTwoSample","difference","meanX","meanY","sampleVarianceY","weightedVariance","wilcoxonRankSum","pooledSamples","rank","tiedRanks","replaceRanksInPlace","rankSum","zScore","UndirectedGraph","nodeSizeExtent","size","xExtent","yExtent","nodeSizeScale","scaleLinear","xScale","yScale","forEach","addNode","edges","edge","addEdge","container","document","getElementById","renderer","initial","circle","state","loop","animateNodes","duration","globalize","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","O","chunkIds","fn","priority","notFulfilled","fulfilled","keys","splice","enumerable","globalThis","Function","window","obj","prop","toStringTag","nmd","paths","children","installedChunks","900","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"mappings":"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","file":"animations.bundle.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","import {initRange} from \"./init.js\";\n\nexport const implicit = Symbol(\"implicit\");\n\nexport default function ordinal() {\n  var index = new Map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new Map();\n    for (const value of _) {\n      const key = value + \"\";\n      if (index.has(key)) continue;\n      index.set(key, domain.push(value));\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default x => () => x;\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {linearish} from \"./linear.js\";\nimport number from \"./number.js\";\n\nexport default function identity(domain) {\n  var unknown;\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? Array.from(domain, number) : [0, 1];\n\n  return linearish(scale);\n}\n","export default function nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport nice from \"./nice.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport function loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {linearish} from \"./linear.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {linearish} from \"./linear.js\";\nimport {copy, identity, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nexport function powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nexport default function pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nexport function sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n","import continuous from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport number from \"./number.js\";\n\nfunction square(x) {\n  return Math.sign(x) * x * x;\n}\n\nfunction unsquare(x) {\n  return Math.sign(x) * Math.sqrt(Math.abs(x));\n}\n\nexport default function radial() {\n  var squared = continuous(),\n      range = [0, 1],\n      round = false,\n      unknown;\n\n  function scale(x) {\n    var y = unsquare(squared(x));\n    return isNaN(y) ? unknown : round ? Math.round(y) : y;\n  }\n\n  scale.invert = function(y) {\n    return squared.invert(square(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (squared.domain(_), scale) : squared.domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (squared.range((range = Array.from(_, number)).map(square)), scale) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return scale.range(_).round(true);\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, scale) : round;\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (squared.clamp(_), scale) : squared.clamp();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return radial(squared.domain(), range)\n        .round(round)\n        .clamp(squared.clamp())\n        .unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import ascending from \"./ascending.js\";\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nexport default function quickselect(array, k, left = 0, right = array.length - 1, compare = ascending) {\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n","import max from \"./max.js\";\nimport min from \"./min.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {ascending, bisect, quantileSorted as threshold} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {linearish} from \"./linear.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","export const durationSecond = 1000;\nexport const durationMinute = durationSecond * 60;\nexport const durationHour = durationMinute * 60;\nexport const durationDay = durationHour * 24;\nexport const durationWeek = durationDay * 7;\nexport const durationMonth = durationDay * 30;\nexport const durationYear = durationDay * 365;\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = function(date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval.js\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","import interval from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nvar day = interval(\n  date => date.setHours(0, 0, 0, 0),\n  (date, step) => date.setDate(date.getDate() + step),\n  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,\n  date => date.getDate() - 1\n);\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval.js\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval.js\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval.js\";\nimport {durationMinute} from \"./duration.js\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval.js\";\nimport {durationHour} from \"./duration.js\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval.js\";\nimport {durationDay} from \"./duration.js\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval.js\";\nimport {durationWeek} from \"./duration.js\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval.js\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval.js\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {bisector, tickStep} from \"d3-array\";\nimport {durationDay, durationHour, durationMinute, durationMonth, durationSecond, durationWeek, durationYear} from \"./duration.js\";\nimport millisecond from \"./millisecond.js\";\nimport second from \"./second.js\";\nimport minute from \"./minute.js\";\nimport hour from \"./hour.js\";\nimport day from \"./day.js\";\nimport {sunday as week} from \"./week.js\";\nimport month from \"./month.js\";\nimport year from \"./year.js\";\nimport utcMinute from \"./utcMinute.js\";\nimport utcHour from \"./utcHour.js\";\nimport utcDay from \"./utcDay.js\";\nimport {utcSunday as utcWeek} from \"./utcWeek.js\";\nimport utcMonth from \"./utcMonth.js\";\nimport utcYear from \"./utcYear.js\";\n\nfunction ticker(year, month, week, day, hour, minute) {\n\n  const tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function ticks(start, stop, count) {\n    const reverse = stop < start;\n    if (reverse) [start, stop] = [stop, start];\n    const interval = count && typeof count.range === \"function\" ? count : tickInterval(start, stop, count);\n    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop\n    return reverse ? ticks.reverse() : ticks;\n  }\n\n  function tickInterval(start, stop, count) {\n    const target = Math.abs(stop - start) / count;\n    const i = bisector(([,, step]) => step).right(tickIntervals, target);\n    if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));\n    if (i === 0) return millisecond.every(Math.max(tickStep(start, stop, count), 1));\n    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n    return t.every(step);\n  }\n\n  return [ticks, tickInterval];\n}\n\nconst [utcTicks, utcTickInterval] = ticker(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute);\nconst [timeTicks, timeTickInterval] = ticker(year, month, week, day, hour, minute);\n\nexport {utcTicks, utcTickInterval, timeTicks, timeTickInterval};\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newDate(y, m, d) {\n  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"g\": formatYearISO,\n    \"G\": formatFullYearISO,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"q\": formatQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"g\": formatUTCYearISO,\n    \"G\": formatUTCFullYearISO,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"q\": formatUTCQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"g\": parseYear,\n    \"G\": parseFullYear,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"q\": parseQuarter,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, Z) {\n    return function(string) {\n      var d = newDate(1900, undefined, 1),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n      if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0));\n\n      // If this is utcParse, never use the local timezone.\n      if (Z && !(\"Z\" in d)) d.Z = 0;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // If the month was not specified, inherit from the quarter.\n      if (d.m === undefined) d.m = \"q\" in d ? d.q : 0;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return localDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", false);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier += \"\", true);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  return new Map(names.map((name, i) => [name.toLowerCase(), i]));\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction dISO(d) {\n  var day = d.getDay();\n  return (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  d = dISO(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatYearISO(d, p) {\n  d = dISO(d);\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatFullYearISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction UTCdISO(d) {\n  var day = d.getUTCDay();\n  return (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  d = UTCdISO(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCYearISO(d, p) {\n  d = UTCdISO(d);\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCFullYearISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeTicks, timeTickInterval} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport nice from \"./nice.js\";\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {\n  var scale = continuous(),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval) {\n    var d = domain();\n    if (!interval || typeof interval.range !== \"function\") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);\n    return interval ? domain(nice(d, interval)) : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));\n  };\n\n  return scale;\n}\n\nexport default function time() {\n  return initRange.apply(calendar(timeTicks, timeTickInterval, timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n","import {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcTicks, utcTickInterval} from \"d3-time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {calendar} from \"./time.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function utcTime() {\n  return initRange.apply(calendar(utcTicks, utcTickInterval, utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n","import {interpolate, interpolateRound} from \"d3-interpolate\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1;\n      return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n","import {ascending, bisect, quantile} from \"d3-array\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\n\nexport default function sequentialQuantile() {\n  var domain = [],\n      interpolator = identity;\n\n  function scale(x) {\n    if (x != null && !isNaN(x = +x)) return interpolator((bisect(domain, x, 1) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.range = function() {\n    return domain.map((d, i) => interpolator(i / (domain.length - 1)));\n  };\n\n  scale.quantiles = function(n) {\n    return Array.from({length: n + 1}, (_, i) => quantile(domain, i / n));\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n","import {default as value} from \"./value.js\";\n\nexport default function piecewise(interpolate, values) {\n  if (values === undefined) values = interpolate, interpolate = value;\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","import {interpolate, interpolateRound, piecewise} from \"d3-interpolate\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {copy} from \"./sequential.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      s = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1, r2;\n      return arguments.length ? ([r0, r1, r2] = _, interpolator = piecewise(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;\n    return scale;\n  };\n}\n\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n","/**\n * Graphology Circular Layout\n * ===========================\n *\n * Layout arranging the nodes in a circle.\n */\nvar defaults = require('lodash/defaultsDeep'),\n    isGraph = require('graphology-utils/is-graph');\n\n/**\n * Default options.\n */\nvar DEFAULTS = {\n  attributes: {\n    x: 'x',\n    y: 'y'\n  },\n  center: 0.5,\n  scale: 1\n};\n\n/**\n * Abstract function running the layout.\n *\n * @param  {Graph}    graph          - Target  graph.\n * @param  {object}   [options]      - Options:\n * @param  {object}     [attributes] - Attributes names to map.\n * @param  {number}     [center]     - Center of the layout.\n * @param  {number}     [scale]      - Scale of the layout.\n * @return {object}                  - The positions by node.\n */\nfunction genericCircularLayout(assign, graph, options) {\n  if (!isGraph(graph))\n    throw new Error('graphology-layout/random: the given graph is not a valid graphology instance.');\n\n  options = defaults(options, DEFAULTS);\n\n  var positions = {},\n      nodes = graph.nodes(),\n      center = options.center,\n      scale = options.scale,\n      tau = Math.PI * 2;\n\n  var l = nodes.length,\n      node,\n      x,\n      y,\n      i;\n\n  for (i = 0; i < l; i++) {\n    node = nodes[i];\n\n    x = scale * Math.cos(i * tau / l);\n    y = scale * Math.sin(i * tau / l);\n\n    if (center !== 0.5) {\n      x += center - 0.5 * scale;\n      y += center - 0.5 * scale;\n    }\n\n    positions[node] = {\n      x: x,\n      y: y\n    };\n\n    if (assign) {\n      graph.setNodeAttribute(node, options.attributes.x, x);\n      graph.setNodeAttribute(node, options.attributes.y, y);\n    }\n  }\n\n  return positions;\n}\n\nvar circularLayout = genericCircularLayout.bind(null, false);\ncircularLayout.assign = genericCircularLayout.bind(null, true);\n\nmodule.exports = circularLayout;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * [Simple linear regression](http://en.wikipedia.org/wiki/Simple_linear_regression)\n * is a simple way to find a fitted line\n * between a set of coordinates. This algorithm finds the slope and y-intercept of a regression line\n * using the least sum of squares.\n *\n * @param {Array<Array<number>>} data an array of two-element of arrays,\n * like `[[0, 1], [2, 3]]`\n * @returns {Object} object containing slope and intersect of regression line\n * @example\n * linearRegression([[0, 0], [1, 1]]); // => { m: 1, b: 0 }\n */\nfunction linearRegression(data) {\n    var m, b;\n\n    // Store data length in a local variable to reduce\n    // repeated object property lookups\n    var dataLength = data.length;\n\n    //if there's only one point, arbitrarily choose a slope of 0\n    //and a y-intercept of whatever the y of the initial point is\n    if (dataLength === 1) {\n        m = 0;\n        b = data[0][1];\n    } else {\n        // Initialize our sums and scope the `m` and `b`\n        // variables that define the line.\n        var sumX = 0,\n            sumY = 0,\n            sumXX = 0,\n            sumXY = 0;\n\n        // Use local variables to grab point values\n        // with minimal object property lookups\n        var point, x, y;\n\n        // Gather the sum of all x values, the sum of all\n        // y values, and the sum of x^2 and (x*y) for each\n        // value.\n        //\n        // In math notation, these would be SS_x, SS_y, SS_xx, and SS_xy\n        for (var i = 0; i < dataLength; i++) {\n            point = data[i];\n            x = point[0];\n            y = point[1];\n\n            sumX += x;\n            sumY += y;\n\n            sumXX += x * x;\n            sumXY += x * y;\n        }\n\n        // `m` is the slope of the regression line\n        m =\n            (dataLength * sumXY - sumX * sumY) /\n            (dataLength * sumXX - sumX * sumX);\n\n        // `b` is the y-intercept of the line.\n        b = sumY / dataLength - (m * sumX) / dataLength;\n    }\n\n    // Return both values as an object.\n    return {\n        m: m,\n        b: b\n    };\n}\n\n/**\n * Given the output of `linearRegression`: an object\n * with `m` and `b` values indicating slope and intercept,\n * respectively, generate a line function that translates\n * x values into y values.\n *\n * @param {Object} mb object with `m` and `b` members, representing\n * slope and intersect of desired line\n * @returns {Function} method that computes y-value at any given\n * x-value on the line.\n * @example\n * var l = linearRegressionLine(linearRegression([[0, 0], [1, 1]]));\n * l(0) // = 0\n * l(2) // = 2\n * linearRegressionLine({ b: 0, m: 1 })(1); // => 1\n * linearRegressionLine({ b: 1, m: 1 })(1); // => 2\n */\nfunction linearRegressionLine(mb /*: { b: number, m: number }*/) {\n    // Return a function that computes a `y` value for each\n    // x value it is given, based on the values of `b` and `a`\n    // that we just computed.\n    return function (x) {\n        return mb.b + mb.m * x;\n    };\n}\n\n/**\n * Our default sum is the [Kahan-Babuska algorithm](https://pdfs.semanticscholar.org/1760/7d467cda1d0277ad272deb2113533131dc09.pdf).\n * This method is an improvement over the classical\n * [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm).\n * It aims at computing the sum of a list of numbers while correcting for\n * floating-point errors. Traditionally, sums are calculated as many\n * successive additions, each one with its own floating-point roundoff. These\n * losses in precision add up as the number of numbers increases. This alternative\n * algorithm is more accurate than the simple way of calculating sums by simple\n * addition.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x input\n * @return {number} sum of all input numbers\n * @example\n * sum([1, 2, 3]); // => 6\n */\nfunction sum(x) {\n    // If the array is empty, we needn't bother computing its sum\n    if (x.length === 0) {\n        return 0;\n    }\n\n    // Initializing the sum as the first number in the array\n    var sum = x[0];\n\n    // Keeping track of the floating-point error correction\n    var correction = 0;\n\n    var transition;\n\n    for (var i = 1; i < x.length; i++) {\n        transition = sum + x[i];\n\n        // Here we need to update the correction in a different fashion\n        // if the new absolute value is greater than the absolute sum\n        if (Math.abs(sum) >= Math.abs(x[i])) {\n            correction += sum - transition + x[i];\n        } else {\n            correction += x[i] - transition + sum;\n        }\n\n        sum = transition;\n    }\n\n    // Returning the corrected sum\n    return sum + correction;\n}\n\n/**\n * The mean, _also known as average_,\n * is the sum of all values over the number of values.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @throws {Error} if the length of x is less than one\n * @returns {number} mean\n * @example\n * mean([0, 10]); // => 5\n */\nfunction mean(x) {\n    if (x.length === 0) {\n        throw new Error(\"mean requires at least one data point\");\n    }\n\n    return sum(x) / x.length;\n}\n\n/**\n * The sum of deviations to the Nth power.\n * When n=2 it's the sum of squared deviations.\n * When n=3 it's the sum of cubed deviations.\n *\n * @param {Array<number>} x\n * @param {number} n power\n * @returns {number} sum of nth power deviations\n *\n * @example\n * var input = [1, 2, 3];\n * // since the variance of a set is the mean squared\n * // deviations, we can calculate that with sumNthPowerDeviations:\n * sumNthPowerDeviations(input, 2) / input.length;\n */\nfunction sumNthPowerDeviations(x, n) {\n    var meanValue = mean(x);\n    var sum = 0;\n    var tempValue;\n    var i;\n\n    // This is an optimization: when n is 2 (we're computing a number squared),\n    // multiplying the number by itself is significantly faster than using\n    // the Math.pow method.\n    if (n === 2) {\n        for (i = 0; i < x.length; i++) {\n            tempValue = x[i] - meanValue;\n            sum += tempValue * tempValue;\n        }\n    } else {\n        for (i = 0; i < x.length; i++) {\n            sum += Math.pow(x[i] - meanValue, n);\n        }\n    }\n\n    return sum;\n}\n\n/**\n * The [variance](http://en.wikipedia.org/wiki/Variance)\n * is the sum of squared deviations from the mean.\n *\n * This is an implementation of variance, not sample variance:\n * see the `sampleVariance` method if you want a sample measure.\n *\n * @param {Array<number>} x a population of one or more data points\n * @returns {number} variance: a value greater than or equal to zero.\n * zero indicates that all values are identical.\n * @throws {Error} if x's length is 0\n * @example\n * variance([1, 2, 3, 4, 5, 6]); // => 2.9166666666666665\n */\nfunction variance(x) {\n    if (x.length === 0) {\n        throw new Error(\"variance requires at least one data point\");\n    }\n\n    // Find the mean of squared deviations between the\n    // mean value and each value.\n    return sumNthPowerDeviations(x, 2) / x.length;\n}\n\n/**\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\n * is the square root of the variance. This is also known as the population\n * standard deviation. It's useful for measuring the amount\n * of variation or dispersion in a set of values.\n *\n * Standard deviation is only appropriate for full-population knowledge: for\n * samples of a population, {@link sampleStandardDeviation} is\n * more appropriate.\n *\n * @param {Array<number>} x input\n * @returns {number} standard deviation\n * @example\n * variance([2, 4, 4, 4, 5, 5, 7, 9]); // => 4\n * standardDeviation([2, 4, 4, 4, 5, 5, 7, 9]); // => 2\n */\nfunction standardDeviation(x) {\n    if (x.length === 1) {\n        return 0;\n    }\n    var v = variance(x);\n    return Math.sqrt(v);\n}\n\n/**\n * The [R Squared](http://en.wikipedia.org/wiki/Coefficient_of_determination)\n * value of data compared with a function `f`\n * is the sum of the squared differences between the prediction\n * and the actual value.\n *\n * @param {Array<Array<number>>} x input data: this should be doubly-nested\n * @param {Function} func function called on `[i][0]` values within the dataset\n * @returns {number} r-squared value\n * @example\n * var samples = [[0, 0], [1, 1]];\n * var regressionLine = linearRegressionLine(linearRegression(samples));\n * rSquared(samples, regressionLine); // = 1 this line is a perfect fit\n */\nfunction rSquared(x, func) {\n    if (x.length < 2) {\n        return 1;\n    }\n\n    // Compute the average y value for the actual\n    // data set in order to compute the\n    // _total sum of squares_\n    var sum = 0;\n    for (var i = 0; i < x.length; i++) {\n        sum += x[i][1];\n    }\n    var average = sum / x.length;\n\n    // Compute the total sum of squares - the\n    // squared difference between each point\n    // and the average of all points.\n    var sumOfSquares = 0;\n    for (var j = 0; j < x.length; j++) {\n        sumOfSquares += Math.pow(average - x[j][1], 2);\n    }\n\n    // Finally estimate the error: the squared\n    // difference between the estimate and the actual data\n    // value at each point.\n    var err = 0;\n    for (var k = 0; k < x.length; k++) {\n        err += Math.pow(x[k][1] - func(x[k][0]), 2);\n    }\n\n    // As the error grows larger, its ratio to the\n    // sum of squares increases and the r squared\n    // value grows lower.\n    return 1 - err / sumOfSquares;\n}\n\n/**\n * The [mode](https://en.wikipedia.org/wiki/Mode_%28statistics%29) is the number\n * that appears in a list the highest number of times.\n * There can be multiple modes in a list: in the event of a tie, this\n * algorithm will return the most recently seen mode.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n)` because the input is sorted.\n *\n * @param {Array<number>} sorted a sample of one or more data points\n * @returns {number} mode\n * @throws {Error} if sorted is empty\n * @example\n * modeSorted([0, 0, 1]); // => 0\n */\nfunction modeSorted(sorted) {\n    // Handle edge cases:\n    // The mode of an empty list is undefined\n    if (sorted.length === 0) {\n        throw new Error(\"mode requires at least one data point\");\n    } else if (sorted.length === 1) {\n        return sorted[0];\n    }\n\n    // This assumes it is dealing with an array of size > 1, since size\n    // 0 and 1 are handled immediately. Hence it starts at index 1 in the\n    // array.\n    var last = sorted[0],\n        // store the mode as we find new modes\n        value = NaN,\n        // store how many times we've seen the mode\n        maxSeen = 0,\n        // how many times the current candidate for the mode\n        // has been seen\n        seenThis = 1;\n\n    // end at sorted.length + 1 to fix the case in which the mode is\n    // the highest number that occurs in the sequence. the last iteration\n    // compares sorted[i], which is undefined, to the highest number\n    // in the series\n    for (var i = 1; i < sorted.length + 1; i++) {\n        // we're seeing a new number pass by\n        if (sorted[i] !== last) {\n            // the last number is the new mode since we saw it more\n            // often than the old one\n            if (seenThis > maxSeen) {\n                maxSeen = seenThis;\n                value = last;\n            }\n            seenThis = 1;\n            last = sorted[i];\n            // if this isn't a new number, it's one more occurrence of\n            // the potential mode\n        } else {\n            seenThis++;\n        }\n    }\n    return value;\n}\n\n/**\n * Sort an array of numbers by their numeric value, ensuring that the\n * array is not changed in place.\n *\n * This is necessary because the default behavior of .sort\n * in JavaScript is to sort arrays as string values\n *\n *     [1, 10, 12, 102, 20].sort()\n *     // output\n *     [1, 10, 102, 12, 20]\n *\n * @param {Array<number>} x input array\n * @return {Array<number>} sorted array\n * @private\n * @example\n * numericSort([3, 2, 1]) // => [1, 2, 3]\n */\nfunction numericSort(x) {\n    return (\n        x\n            // ensure the array is not changed in-place\n            .slice()\n            // comparator function that treats input as numeric\n            .sort(function (a, b) {\n                return a - b;\n            })\n    );\n}\n\n/**\n * The [mode](https://en.wikipedia.org/wiki/Mode_%28statistics%29) is the number\n * that appears in a list the highest number of times.\n * There can be multiple modes in a list: in the event of a tie, this\n * algorithm will return the most recently seen mode.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n log(n))` because it needs to sort the array internally\n * before running an `O(n)` search to find the mode.\n *\n * @param {Array<number>} x input\n * @returns {number} mode\n * @example\n * mode([0, 0, 1]); // => 0\n */\nfunction mode(x) {\n    // Sorting the array lets us iterate through it below and be sure\n    // that every time we see a new number it's new and we'll never\n    // see the same number twice\n    return modeSorted(numericSort(x));\n}\n\n/* globals Map: false */\n\n/**\n * The [mode](https://en.wikipedia.org/wiki/Mode_%28statistics%29) is the number\n * that appears in a list the highest number of times.\n * There can be multiple modes in a list: in the event of a tie, this\n * algorithm will return the most recently seen mode.\n *\n * modeFast uses a Map object to keep track of the mode, instead of the approach\n * used with `mode`, a sorted array. As a result, it is faster\n * than `mode` and supports any data type that can be compared with `==`.\n * It also requires a\n * [JavaScript environment with support for Map](https://kangax.github.io/compat-table/es6/#test-Map),\n * and will throw an error if Map is not available.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * @param {Array<*>} x a sample of one or more data points\n * @returns {?*} mode\n * @throws {ReferenceError} if the JavaScript environment doesn't support Map\n * @throws {Error} if x is empty\n * @example\n * modeFast(['rabbits', 'rabbits', 'squirrels']); // => 'rabbits'\n */\nfunction modeFast(x) {\n    // This index will reflect the incidence of different values, indexing\n    // them like\n    // { value: count }\n    var index = new Map();\n\n    // A running `mode` and the number of times it has been encountered.\n    var mode;\n    var modeCount = 0;\n\n    for (var i = 0; i < x.length; i++) {\n        var newCount = index.get(x[i]);\n        if (newCount === undefined) {\n            newCount = 1;\n        } else {\n            newCount++;\n        }\n        if (newCount > modeCount) {\n            mode = x[i];\n            modeCount = newCount;\n        }\n        index.set(x[i], newCount);\n    }\n\n    if (modeCount === 0) {\n        throw new Error(\"mode requires at last one data point\");\n    }\n\n    return mode;\n}\n\n/**\n * The min is the lowest number in the array.\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @throws {Error} if the length of x is less than one\n * @returns {number} minimum value\n * @example\n * min([1, 5, -10, 100, 2]); // => -10\n */\nfunction min(x) {\n    if (x.length === 0) {\n        throw new Error(\"min requires at least one data point\");\n    }\n\n    var value = x[0];\n    for (var i = 1; i < x.length; i++) {\n        if (x[i] < value) {\n            value = x[i];\n        }\n    }\n    return value;\n}\n\n/**\n * This computes the maximum number in an array.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} maximum value\n * @throws {Error} if the length of x is less than one\n * @example\n * max([1, 2, 3, 4]);\n * // => 4\n */\nfunction max(x) {\n    if (x.length === 0) {\n        throw new Error(\"max requires at least one data point\");\n    }\n\n    var value = x[0];\n    for (var i = 1; i < x.length; i++) {\n        if (x[i] > value) {\n            value = x[i];\n        }\n    }\n    return value;\n}\n\n/**\n * This computes the minimum & maximum number in an array.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {Array<number>} minimum & maximum value\n * @throws {Error} if the length of x is less than one\n * @example\n * extent([1, 2, 3, 4]);\n * // => [1, 4]\n */\nfunction extent(x) {\n    if (x.length === 0) {\n        throw new Error(\"extent requires at least one data point\");\n    }\n\n    var min = x[0];\n    var max = x[0];\n    for (var i = 1; i < x.length; i++) {\n        if (x[i] > max) {\n            max = x[i];\n        }\n        if (x[i] < min) {\n            min = x[i];\n        }\n    }\n    return [min, max];\n}\n\n/**\n * The minimum is the lowest number in the array. With a sorted array,\n * the first element in the array is always the smallest, so this calculation\n * can be done in one step, or constant time.\n *\n * @param {Array<number>} x input\n * @returns {number} minimum value\n * @example\n * minSorted([-100, -10, 1, 2, 5]); // => -100\n */\nfunction minSorted(x) {\n    return x[0];\n}\n\n/**\n * The maximum is the highest number in the array. With a sorted array,\n * the last element in the array is always the largest, so this calculation\n * can be done in one step, or constant time.\n *\n * @param {Array<number>} x input\n * @returns {number} maximum value\n * @example\n * maxSorted([-100, -10, 1, 2, 5]); // => 5\n */\nfunction maxSorted(x) {\n    return x[x.length - 1];\n}\n\n/**\n * The extent is the lowest & highest number in the array. With a sorted array,\n * the first element in the array is always the lowest while the last element is always the largest, so this calculation\n * can be done in one step, or constant time.\n *\n * @param {Array<number>} x input\n * @returns {Array<number>} minimum & maximum value\n * @example\n * extentSorted([-100, -10, 1, 2, 5]); // => [-100, 5]\n */\nfunction extentSorted(x) {\n    return [x[0], x[x.length - 1]];\n}\n\n/**\n * The simple [sum](https://en.wikipedia.org/wiki/Summation) of an array\n * is the result of adding all numbers together, starting from zero.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x input\n * @return {number} sum of all input numbers\n * @example\n * sumSimple([1, 2, 3]); // => 6\n */\nfunction sumSimple(x) {\n    var value = 0;\n    for (var i = 0; i < x.length; i++) {\n        value += x[i];\n    }\n    return value;\n}\n\n/**\n * The [product](https://en.wikipedia.org/wiki/Product_(mathematics)) of an array\n * is the result of multiplying all numbers together, starting using one as the multiplicative identity.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x input\n * @return {number} product of all input numbers\n * @example\n * product([1, 2, 3, 4]); // => 24\n */\nfunction product(x) {\n    var value = 1;\n    for (var i = 0; i < x.length; i++) {\n        value *= x[i];\n    }\n    return value;\n}\n\n/**\n * This is the internal implementation of quantiles: when you know\n * that the order is sorted, you don't need to re-sort it, and the computations\n * are faster.\n *\n * @param {Array<number>} x sample of one or more data points\n * @param {number} p desired quantile: a number between 0 to 1, inclusive\n * @returns {number} quantile value\n * @throws {Error} if p ix outside of the range from 0 to 1\n * @throws {Error} if x is empty\n * @example\n * quantileSorted([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9\n */\nfunction quantileSorted(x, p) {\n    var idx = x.length * p;\n    if (x.length === 0) {\n        throw new Error(\"quantile requires at least one data point.\");\n    } else if (p < 0 || p > 1) {\n        throw new Error(\"quantiles must be between 0 and 1\");\n    } else if (p === 1) {\n        // If p is 1, directly return the last element\n        return x[x.length - 1];\n    } else if (p === 0) {\n        // If p is 0, directly return the first element\n        return x[0];\n    } else if (idx % 1 !== 0) {\n        // If p is not integer, return the next element in array\n        return x[Math.ceil(idx) - 1];\n    } else if (x.length % 2 === 0) {\n        // If the list has even-length, we'll take the average of this number\n        // and the next value, if there is one\n        return (x[idx - 1] + x[idx]) / 2;\n    } else {\n        // Finally, in the simple case of an integer value\n        // with an odd-length list, return the x value at the index.\n        return x[idx];\n    }\n}\n\n/**\n * Rearrange items in `arr` so that all items in `[left, k]` range are the smallest.\n * The `k`-th element will have the `(k - left + 1)`-th smallest value in `[left, right]`.\n *\n * Implements Floyd-Rivest selection algorithm https://en.wikipedia.org/wiki/Floyd-Rivest_algorithm\n *\n * @param {Array<number>} arr input array\n * @param {number} k pivot index\n * @param {number} [left] left index\n * @param {number} [right] right index\n * @returns {void} mutates input array\n * @example\n * var arr = [65, 28, 59, 33, 21, 56, 22, 95, 50, 12, 90, 53, 28, 77, 39];\n * quickselect(arr, 8);\n * // = [39, 28, 28, 33, 21, 12, 22, 50, 53, 56, 59, 65, 90, 77, 95]\n */\nfunction quickselect(arr, k, left, right) {\n    left = left || 0;\n    right = right || arr.length - 1;\n\n    while (right > left) {\n        // 600 and 0.5 are arbitrary constants chosen in the original paper to minimize execution time\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp((2 * z) / 3);\n            var sd = 0.5 * Math.sqrt((z * s * (n - s)) / n);\n            if (m - n / 2 < 0) { sd *= -1; }\n            var newLeft = Math.max(left, Math.floor(k - (m * s) / n + sd));\n            var newRight = Math.min(\n                right,\n                Math.floor(k + ((n - m) * s) / n + sd)\n            );\n            quickselect(arr, k, newLeft, newRight);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (arr[right] > t) { swap(arr, left, right); }\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (arr[i] < t) { i++; }\n            while (arr[j] > t) { j--; }\n        }\n\n        if (arr[left] === t) { swap(arr, left, j); }\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) { left = j + 1; }\n        if (k <= j) { right = j - 1; }\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * The [quantile](https://en.wikipedia.org/wiki/Quantile):\n * this is a population quantile, since we assume to know the entire\n * dataset in this library. This is an implementation of the\n * [Quantiles of a Population](http://en.wikipedia.org/wiki/Quantile#Quantiles_of_a_population)\n * algorithm from wikipedia.\n *\n * Sample is a one-dimensional array of numbers,\n * and p is either a decimal number from 0 to 1 or an array of decimal\n * numbers from 0 to 1.\n * In terms of a k/q quantile, p = k/q - it's just dealing with fractions or dealing\n * with decimal values.\n * When p is an array, the result of the function is also an array containing the appropriate\n * quantiles in input order\n *\n * @param {Array<number>} x sample of one or more numbers\n * @param {Array<number> | number} p the desired quantile, as a number between 0 and 1\n * @returns {number} quantile\n * @example\n * quantile([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9\n */\nfunction quantile(x, p) {\n    var copy = x.slice();\n\n    if (Array.isArray(p)) {\n        // rearrange elements so that each element corresponding to a requested\n        // quantile is on a place it would be if the array was fully sorted\n        multiQuantileSelect(copy, p);\n        // Initialize the result array\n        var results = [];\n        // For each requested quantile\n        for (var i = 0; i < p.length; i++) {\n            results[i] = quantileSorted(copy, p[i]);\n        }\n        return results;\n    } else {\n        var idx = quantileIndex(copy.length, p);\n        quantileSelect(copy, idx, 0, copy.length - 1);\n        return quantileSorted(copy, p);\n    }\n}\n\nfunction quantileSelect(arr, k, left, right) {\n    if (k % 1 === 0) {\n        quickselect(arr, k, left, right);\n    } else {\n        k = Math.floor(k);\n        quickselect(arr, k, left, right);\n        quickselect(arr, k + 1, k + 1, right);\n    }\n}\n\nfunction multiQuantileSelect(arr, p) {\n    var indices = [0];\n    for (var i = 0; i < p.length; i++) {\n        indices.push(quantileIndex(arr.length, p[i]));\n    }\n    indices.push(arr.length - 1);\n    indices.sort(compare);\n\n    var stack = [0, indices.length - 1];\n\n    while (stack.length) {\n        var r = Math.ceil(stack.pop());\n        var l = Math.floor(stack.pop());\n        if (r - l <= 1) { continue; }\n\n        var m = Math.floor((l + r) / 2);\n        quantileSelect(\n            arr,\n            indices[m],\n            Math.floor(indices[l]),\n            Math.ceil(indices[r])\n        );\n\n        stack.push(l, m, m, r);\n    }\n}\n\nfunction compare(a, b) {\n    return a - b;\n}\n\nfunction quantileIndex(len, p) {\n    var idx = len * p;\n    if (p === 1) {\n        // If p is 1, directly return the last index\n        return len - 1;\n    } else if (p === 0) {\n        // If p is 0, directly return the first index\n        return 0;\n    } else if (idx % 1 !== 0) {\n        // If index is not integer, return the next index in array\n        return Math.ceil(idx) - 1;\n    } else if (len % 2 === 0) {\n        // If the list has even-length, we'll return the middle of two indices\n        // around quantile to indicate that we need an average value of the two\n        return idx - 0.5;\n    } else {\n        // Finally, in the simple case of an integer index\n        // with an odd-length list, return the index\n        return idx;\n    }\n}\n\n/* eslint no-bitwise: 0 */\n\n/**\n * This function returns the quantile in which one would find the given value in\n * the given array. With a sorted array, leveraging binary search, we can find\n * this information in logarithmic time.\n *\n * @param {Array<number>} x input\n * @returns {number} value value\n * @example\n * quantileRankSorted([1, 2, 3, 4], 3); // => 0.75\n * quantileRankSorted([1, 2, 3, 3, 4], 3); // => 0.7\n * quantileRankSorted([1, 2, 3, 4], 6); // => 1\n * quantileRankSorted([1, 2, 3, 3, 5], 4); // => 0.8\n */\nfunction quantileRankSorted(x, value) {\n    // Value is lesser than any value in the array\n    if (value < x[0]) {\n        return 0;\n    }\n\n    // Value is greater than any value in the array\n    if (value > x[x.length - 1]) {\n        return 1;\n    }\n\n    var l = lowerBound(x, value);\n\n    // Value is not in the array\n    if (x[l] !== value) {\n        return l / x.length;\n    }\n\n    l++;\n\n    var u = upperBound(x, value);\n\n    // The value exists only once in the array\n    if (u === l) {\n        return l / x.length;\n    }\n\n    // Here, we are basically computing the mean of the range of indices\n    // containing our searched value. But, instead, of initializing an\n    // array and looping over it, there is a dedicated math formula that\n    // we apply below to get the result.\n    var r = u - l + 1;\n    var sum = (r * (u + l)) / 2;\n    var mean = sum / r;\n\n    return mean / x.length;\n}\n\nfunction lowerBound(x, value) {\n    var mid = 0;\n    var lo = 0;\n    var hi = x.length;\n\n    while (lo < hi) {\n        mid = (lo + hi) >>> 1;\n\n        if (value <= x[mid]) {\n            hi = mid;\n        } else {\n            lo = -~mid;\n        }\n    }\n\n    return lo;\n}\n\nfunction upperBound(x, value) {\n    var mid = 0;\n    var lo = 0;\n    var hi = x.length;\n\n    while (lo < hi) {\n        mid = (lo + hi) >>> 1;\n\n        if (value >= x[mid]) {\n            lo = -~mid;\n        } else {\n            hi = mid;\n        }\n    }\n\n    return lo;\n}\n\n/**\n * This function returns the quantile in which one would find the given value in\n * the given array. It will copy and sort your array before each run, so\n * if you know your array is already sorted, you should use `quantileRankSorted`\n * instead.\n *\n * @param {Array<number>} x input\n * @returns {number} value value\n * @example\n * quantileRank([4, 3, 1, 2], 3); // => 0.75\n * quantileRank([4, 3, 2, 3, 1], 3); // => 0.7\n * quantileRank([2, 4, 1, 3], 6); // => 1\n * quantileRank([5, 3, 1, 2, 3], 4); // => 0.8\n */\nfunction quantileRank(x, value) {\n    // Cloning and sorting the array\n    var sortedCopy = numericSort(x);\n\n    return quantileRankSorted(sortedCopy, value);\n}\n\n/**\n * The [Interquartile range](http://en.wikipedia.org/wiki/Interquartile_range) is\n * a measure of statistical dispersion, or how scattered, spread, or\n * concentrated a distribution is. It's computed as the difference between\n * the third quartile and first quartile.\n *\n * @param {Array<number>} x sample of one or more numbers\n * @returns {number} interquartile range: the span between lower and upper quartile,\n * 0.25 and 0.75\n * @example\n * interquartileRange([0, 1, 2, 3]); // => 2\n */\nfunction interquartileRange(x) {\n    // Interquartile range is the span between the upper quartile,\n    // at `0.75`, and lower quartile, `0.25`\n    var q1 = quantile(x, 0.75);\n    var q2 = quantile(x, 0.25);\n\n    if (typeof q1 === \"number\" && typeof q2 === \"number\") {\n        return q1 - q2;\n    }\n}\n\n/**\n * The [median](http://en.wikipedia.org/wiki/Median) is\n * the middle number of a list. This is often a good indicator of 'the middle'\n * when there are outliers that skew the `mean()` value.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * The median isn't necessarily one of the elements in the list: the value\n * can be the average of two elements if the list has an even length\n * and the two central values are different.\n *\n * @param {Array<number>} x input\n * @returns {number} median value\n * @example\n * median([10, 2, 5, 100, 2, 1]); // => 3.5\n */\nfunction median(x) {\n    return +quantile(x, 0.5);\n}\n\n/**\n * The [Median Absolute Deviation](http://en.wikipedia.org/wiki/Median_absolute_deviation) is\n * a robust measure of statistical\n * dispersion. It is more resilient to outliers than the standard deviation.\n *\n * @param {Array<number>} x input array\n * @returns {number} median absolute deviation\n * @example\n * medianAbsoluteDeviation([1, 1, 2, 2, 4, 6, 9]); // => 1\n */\nfunction medianAbsoluteDeviation(x) {\n    var medianValue = median(x);\n    var medianAbsoluteDeviations = [];\n\n    // Make a list of absolute deviations from the median\n    for (var i = 0; i < x.length; i++) {\n        medianAbsoluteDeviations.push(Math.abs(x[i] - medianValue));\n    }\n\n    // Find the median value of that list\n    return median(medianAbsoluteDeviations);\n}\n\n/**\n * Split an array into chunks of a specified size. This function\n * has the same behavior as [PHP's array_chunk](http://php.net/manual/en/function.array-chunk.php)\n * function, and thus will insert smaller-sized chunks at the end if\n * the input size is not divisible by the chunk size.\n *\n * `x` is expected to be an array, and `chunkSize` a number.\n * The `x` array can contain any kind of data.\n *\n * @param {Array} x a sample\n * @param {number} chunkSize size of each output array. must be a positive integer\n * @returns {Array<Array>} a chunked array\n * @throws {Error} if chunk size is less than 1 or not an integer\n * @example\n * chunk([1, 2, 3, 4, 5, 6], 2);\n * // => [[1, 2], [3, 4], [5, 6]]\n */\nfunction chunk(x, chunkSize) {\n    // a list of result chunks, as arrays in an array\n    var output = [];\n\n    // `chunkSize` must be zero or higher - otherwise the loop below,\n    // in which we call `start += chunkSize`, will loop infinitely.\n    // So, we'll detect and throw in that case to indicate\n    // invalid input.\n    if (chunkSize < 1) {\n        throw new Error(\"chunk size must be a positive number\");\n    }\n\n    if (Math.floor(chunkSize) !== chunkSize) {\n        throw new Error(\"chunk size must be an integer\");\n    }\n\n    // `start` is the index at which `.slice` will start selecting\n    // new array elements\n    for (var start = 0; start < x.length; start += chunkSize) {\n        // for each chunk, slice that part of the array and add it\n        // to the output. The `.slice` function does not change\n        // the original array.\n        output.push(x.slice(start, start + chunkSize));\n    }\n    return output;\n}\n\n/**\n * Sampling with replacement is a type of sampling that allows the same\n * item to be picked out of a population more than once.\n *\n * @param {Array<*>} x an array of any kind of value\n * @param {number} n count of how many elements to take\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @return {Array} n sampled items from the population\n * @example\n * var values = [1, 2, 3, 4];\n * sampleWithReplacement(values, 2); // returns 2 random values, like [2, 4];\n */\nfunction sampleWithReplacement(x, n, randomSource) {\n    if (x.length === 0) {\n        return [];\n    }\n\n    // a custom random number source can be provided if you want to use\n    // a fixed seed or another random number generator, like\n    // [random-js](https://www.npmjs.org/package/random-js)\n    randomSource = randomSource || Math.random;\n\n    var length = x.length;\n    var sample = [];\n\n    for (var i = 0; i < n; i++) {\n        var index = Math.floor(randomSource() * length);\n\n        sample.push(x[index]);\n    }\n\n    return sample;\n}\n\n/**\n * A [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle)\n * in-place - which means that it **will change the order of the original\n * array by reference**.\n *\n * This is an algorithm that generates a random [permutation](https://en.wikipedia.org/wiki/Permutation)\n * of a set.\n *\n * @param {Array} x sample of one or more numbers\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @returns {Array} x\n * @example\n * var x = [1, 2, 3, 4];\n * shuffleInPlace(x);\n * // x is shuffled to a value like [2, 1, 4, 3]\n */\nfunction shuffleInPlace(x, randomSource) {\n    // a custom random number source can be provided if you want to use\n    // a fixed seed or another random number generator, like\n    // [random-js](https://www.npmjs.org/package/random-js)\n    randomSource = randomSource || Math.random;\n\n    // store the current length of the x to determine\n    // when no elements remain to shuffle.\n    var length = x.length;\n\n    // temporary is used to hold an item when it is being\n    // swapped between indices.\n    var temporary;\n\n    // The index to swap at each stage.\n    var index;\n\n    // While there are still items to shuffle\n    while (length > 0) {\n        // choose a random index within the subset of the array\n        // that is not yet shuffled\n        index = Math.floor(randomSource() * length--);\n\n        // store the value that we'll move temporarily\n        temporary = x[length];\n\n        // swap the value at `x[length]` with `x[index]`\n        x[length] = x[index];\n        x[index] = temporary;\n    }\n\n    return x;\n}\n\n/**\n * A [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle)\n * is a fast way to create a random permutation of a finite set. This is\n * a function around `shuffle_in_place` that adds the guarantee that\n * it will not modify its input.\n *\n * @param {Array} x sample of 0 or more numbers\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @return {Array} shuffled version of input\n * @example\n * var shuffled = shuffle([1, 2, 3, 4]);\n * shuffled; // = [2, 3, 1, 4] or any other random permutation\n */\nfunction shuffle(x, randomSource) {\n    // slice the original array so that it is not modified\n    var sample = x.slice();\n\n    // and then shuffle that shallow-copied array, in place\n    return shuffleInPlace(sample, randomSource);\n}\n\n/**\n * Create a [simple random sample](http://en.wikipedia.org/wiki/Simple_random_sample)\n * from a given array of `n` elements.\n *\n * The sampled values will be in any order, not necessarily the order\n * they appear in the input.\n *\n * @param {Array<any>} x input array. can contain any type\n * @param {number} n count of how many elements to take\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @return {Array} subset of n elements in original array\n *\n * @example\n * var values = [1, 2, 4, 5, 6, 7, 8, 9];\n * sample(values, 3); // returns 3 random values, like [2, 5, 8];\n */\nfunction sample(x, n, randomSource) {\n    // shuffle the original array using a fisher-yates shuffle\n    var shuffled = shuffle(x, randomSource);\n\n    // and then return a subset of it - the first `n` elements.\n    return shuffled.slice(0, n);\n}\n\n/**\n * Create a new column x row matrix.\n *\n * @private\n * @param {number} columns\n * @param {number} rows\n * @return {Array<Array<number>>} matrix\n * @example\n * makeMatrix(10, 10);\n */\nfunction makeMatrix(columns, rows) {\n    var matrix = [];\n    for (var i = 0; i < columns; i++) {\n        var column = [];\n        for (var j = 0; j < rows; j++) {\n            column.push(0);\n        }\n        matrix.push(column);\n    }\n    return matrix;\n}\n\n/**\n * For a sorted input, counting the number of unique values\n * is possible in constant time and constant memory. This is\n * a simple implementation of the algorithm.\n *\n * Values are compared with `===`, so objects and non-primitive objects\n * are not handled in any special way.\n *\n * @param {Array<*>} x an array of any kind of value\n * @returns {number} count of unique values\n * @example\n * uniqueCountSorted([1, 2, 3]); // => 3\n * uniqueCountSorted([1, 1, 1]); // => 1\n */\nfunction uniqueCountSorted(x) {\n    var uniqueValueCount = 0,\n        lastSeenValue;\n    for (var i = 0; i < x.length; i++) {\n        if (i === 0 || x[i] !== lastSeenValue) {\n            lastSeenValue = x[i];\n            uniqueValueCount++;\n        }\n    }\n    return uniqueValueCount;\n}\n\n/**\n * Generates incrementally computed values based on the sums and sums of\n * squares for the data array\n *\n * @private\n * @param {number} j\n * @param {number} i\n * @param {Array<number>} sums\n * @param {Array<number>} sumsOfSquares\n * @return {number}\n * @example\n * ssq(0, 1, [-1, 0, 2], [1, 1, 5]);\n */\nfunction ssq(j, i, sums, sumsOfSquares) {\n    var sji; // s(j, i)\n    if (j > 0) {\n        var muji = (sums[i] - sums[j - 1]) / (i - j + 1); // mu(j, i)\n        sji =\n            sumsOfSquares[i] - sumsOfSquares[j - 1] - (i - j + 1) * muji * muji;\n    } else {\n        sji = sumsOfSquares[i] - (sums[i] * sums[i]) / (i + 1);\n    }\n    if (sji < 0) {\n        return 0;\n    }\n    return sji;\n}\n\n/**\n * Function that recursively divides and conquers computations\n * for cluster j\n *\n * @private\n * @param {number} iMin Minimum index in cluster to be computed\n * @param {number} iMax Maximum index in cluster to be computed\n * @param {number} cluster Index of the cluster currently being computed\n * @param {Array<Array<number>>} matrix\n * @param {Array<Array<number>>} backtrackMatrix\n * @param {Array<number>} sums\n * @param {Array<number>} sumsOfSquares\n */\nfunction fillMatrixColumn(\n    iMin,\n    iMax,\n    cluster,\n    matrix,\n    backtrackMatrix,\n    sums,\n    sumsOfSquares\n) {\n    if (iMin > iMax) {\n        return;\n    }\n\n    // Start at midpoint between iMin and iMax\n    var i = Math.floor((iMin + iMax) / 2);\n\n    matrix[cluster][i] = matrix[cluster - 1][i - 1];\n    backtrackMatrix[cluster][i] = i;\n\n    var jlow = cluster; // the lower end for j\n\n    if (iMin > cluster) {\n        jlow = Math.max(jlow, backtrackMatrix[cluster][iMin - 1] || 0);\n    }\n    jlow = Math.max(jlow, backtrackMatrix[cluster - 1][i] || 0);\n\n    var jhigh = i - 1; // the upper end for j\n    if (iMax < matrix[0].length - 1) {\n        jhigh = Math.min(jhigh, backtrackMatrix[cluster][iMax + 1] || 0);\n    }\n\n    var sji;\n    var sjlowi;\n    var ssqjlow;\n    var ssqj;\n    for (var j = jhigh; j >= jlow; --j) {\n        sji = ssq(j, i, sums, sumsOfSquares);\n\n        if (sji + matrix[cluster - 1][jlow - 1] >= matrix[cluster][i]) {\n            break;\n        }\n\n        // Examine the lower bound of the cluster border\n        sjlowi = ssq(jlow, i, sums, sumsOfSquares);\n\n        ssqjlow = sjlowi + matrix[cluster - 1][jlow - 1];\n\n        if (ssqjlow < matrix[cluster][i]) {\n            // Shrink the lower bound\n            matrix[cluster][i] = ssqjlow;\n            backtrackMatrix[cluster][i] = jlow;\n        }\n        jlow++;\n\n        ssqj = sji + matrix[cluster - 1][j - 1];\n        if (ssqj < matrix[cluster][i]) {\n            matrix[cluster][i] = ssqj;\n            backtrackMatrix[cluster][i] = j;\n        }\n    }\n\n    fillMatrixColumn(\n        iMin,\n        i - 1,\n        cluster,\n        matrix,\n        backtrackMatrix,\n        sums,\n        sumsOfSquares\n    );\n    fillMatrixColumn(\n        i + 1,\n        iMax,\n        cluster,\n        matrix,\n        backtrackMatrix,\n        sums,\n        sumsOfSquares\n    );\n}\n\n/**\n * Initializes the main matrices used in Ckmeans and kicks\n * off the divide and conquer cluster computation strategy\n *\n * @private\n * @param {Array<number>} data sorted array of values\n * @param {Array<Array<number>>} matrix\n * @param {Array<Array<number>>} backtrackMatrix\n */\nfunction fillMatrices(data, matrix, backtrackMatrix) {\n    var nValues = matrix[0].length;\n\n    // Shift values by the median to improve numeric stability\n    var shift = data[Math.floor(nValues / 2)];\n\n    // Cumulative sum and cumulative sum of squares for all values in data array\n    var sums = [];\n    var sumsOfSquares = [];\n\n    // Initialize first column in matrix & backtrackMatrix\n    for (var i = 0, shiftedValue = (void 0); i < nValues; ++i) {\n        shiftedValue = data[i] - shift;\n        if (i === 0) {\n            sums.push(shiftedValue);\n            sumsOfSquares.push(shiftedValue * shiftedValue);\n        } else {\n            sums.push(sums[i - 1] + shiftedValue);\n            sumsOfSquares.push(\n                sumsOfSquares[i - 1] + shiftedValue * shiftedValue\n            );\n        }\n\n        // Initialize for cluster = 0\n        matrix[0][i] = ssq(0, i, sums, sumsOfSquares);\n        backtrackMatrix[0][i] = 0;\n    }\n\n    // Initialize the rest of the columns\n    var iMin;\n    for (var cluster = 1; cluster < matrix.length; ++cluster) {\n        if (cluster < matrix.length - 1) {\n            iMin = cluster;\n        } else {\n            // No need to compute matrix[K-1][0] ... matrix[K-1][N-2]\n            iMin = nValues - 1;\n        }\n\n        fillMatrixColumn(\n            iMin,\n            nValues - 1,\n            cluster,\n            matrix,\n            backtrackMatrix,\n            sums,\n            sumsOfSquares\n        );\n    }\n}\n\n/**\n * Ckmeans clustering is an improvement on heuristic-based clustering\n * approaches like Jenks. The algorithm was developed in\n * [Haizhou Wang and Mingzhou Song](http://journal.r-project.org/archive/2011-2/RJournal_2011-2_Wang+Song.pdf)\n * as a [dynamic programming](https://en.wikipedia.org/wiki/Dynamic_programming) approach\n * to the problem of clustering numeric data into groups with the least\n * within-group sum-of-squared-deviations.\n *\n * Minimizing the difference within groups - what Wang & Song refer to as\n * `withinss`, or within sum-of-squares, means that groups are optimally\n * homogenous within and the data is split into representative groups.\n * This is very useful for visualization, where you may want to represent\n * a continuous variable in discrete color or style groups. This function\n * can provide groups that emphasize differences between data.\n *\n * Being a dynamic approach, this algorithm is based on two matrices that\n * store incrementally-computed values for squared deviations and backtracking\n * indexes.\n *\n * This implementation is based on Ckmeans 3.4.6, which introduced a new divide\n * and conquer approach that improved runtime from O(kn^2) to O(kn log(n)).\n *\n * Unlike the [original implementation](https://cran.r-project.org/web/packages/Ckmeans.1d.dp/index.html),\n * this implementation does not include any code to automatically determine\n * the optimal number of clusters: this information needs to be explicitly\n * provided.\n *\n * ### References\n * _Ckmeans.1d.dp: Optimal k-means Clustering in One Dimension by Dynamic\n * Programming_ Haizhou Wang and Mingzhou Song ISSN 2073-4859\n *\n * from The R Journal Vol. 3/2, December 2011\n * @param {Array<number>} x input data, as an array of number values\n * @param {number} nClusters number of desired classes. This cannot be\n * greater than the number of values in the data array.\n * @returns {Array<Array<number>>} clustered input\n * @throws {Error} if the number of requested clusters is higher than the size of the data\n * @example\n * ckmeans([-1, 2, -1, 2, 4, 5, 6, -1, 2, -1], 3);\n * // The input, clustered into groups of similar numbers.\n * //= [[-1, -1, -1, -1], [2, 2, 2], [4, 5, 6]]);\n */\nfunction ckmeans(x, nClusters) {\n    if (nClusters > x.length) {\n        throw new Error(\n            \"cannot generate more classes than there are data values\"\n        );\n    }\n\n    var sorted = numericSort(x);\n    // we'll use this as the maximum number of clusters\n    var uniqueCount = uniqueCountSorted(sorted);\n\n    // if all of the input values are identical, there's one cluster\n    // with all of the input in it.\n    if (uniqueCount === 1) {\n        return [sorted];\n    }\n\n    // named 'S' originally\n    var matrix = makeMatrix(nClusters, sorted.length);\n    // named 'J' originally\n    var backtrackMatrix = makeMatrix(nClusters, sorted.length);\n\n    // This is a dynamic programming way to solve the problem of minimizing\n    // within-cluster sum of squares. It's similar to linear regression\n    // in this way, and this calculation incrementally computes the\n    // sum of squares that are later read.\n    fillMatrices(sorted, matrix, backtrackMatrix);\n\n    // The real work of Ckmeans clustering happens in the matrix generation:\n    // the generated matrices encode all possible clustering combinations, and\n    // once they're generated we can solve for the best clustering groups\n    // very quickly.\n    var clusters = [];\n    var clusterRight = backtrackMatrix[0].length - 1;\n\n    // Backtrack the clusters from the dynamic programming matrix. This\n    // starts at the bottom-right corner of the matrix (if the top-left is 0, 0),\n    // and moves the cluster target with the loop.\n    for (var cluster = backtrackMatrix.length - 1; cluster >= 0; cluster--) {\n        var clusterLeft = backtrackMatrix[cluster][clusterRight];\n\n        // fill the cluster from the sorted input by taking a slice of the\n        // array. the backtrack matrix makes this easy - it stores the\n        // indexes where the cluster should start and end.\n        clusters[cluster] = sorted.slice(clusterLeft, clusterRight + 1);\n\n        if (cluster > 0) {\n            clusterRight = clusterLeft - 1;\n        }\n    }\n\n    return clusters;\n}\n\n/**\n * Given an array of x, this will find the extent of the\n * x and return an array of breaks that can be used\n * to categorize the x into a number of classes. The\n * returned array will always be 1 longer than the number of\n * classes because it includes the minimum value.\n *\n * @param {Array<number>} x an array of number values\n * @param {number} nClasses number of desired classes\n * @returns {Array<number>} array of class break positions\n * @example\n * equalIntervalBreaks([1, 2, 3, 4, 5, 6], 4); // => [1, 2.25, 3.5, 4.75, 6]\n */\nfunction equalIntervalBreaks(x, nClasses) {\n    if (x.length < 2) {\n        return x;\n    }\n\n    var theMin = min(x);\n    var theMax = max(x);\n\n    // the first break will always be the minimum value\n    // in the xset\n    var breaks = [theMin];\n\n    // The size of each break is the full range of the x\n    // divided by the number of classes requested\n    var breakSize = (theMax - theMin) / nClasses;\n\n    // In the case of nClasses = 1, this loop won't run\n    // and the returned breaks will be [min, max]\n    for (var i = 1; i < nClasses; i++) {\n        breaks.push(breaks[0] + breakSize * i);\n    }\n\n    // the last break will always be the\n    // maximum.\n    breaks.push(theMax);\n\n    return breaks;\n}\n\n/**\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_covariance) of two datasets:\n * how much do the two datasets move together?\n * x and y are two datasets, represented as arrays of numbers.\n *\n * @param {Array<number>} x a sample of two or more data points\n * @param {Array<number>} y a sample of two or more data points\n * @throws {Error} if x and y do not have equal lengths\n * @throws {Error} if x or y have length of one or less\n * @returns {number} sample covariance\n * @example\n * sampleCovariance([1, 2, 3, 4, 5, 6], [6, 5, 4, 3, 2, 1]); // => -3.5\n */\nfunction sampleCovariance(x, y) {\n    // The two datasets must have the same length which must be more than 1\n    if (x.length !== y.length) {\n        throw new Error(\"sampleCovariance requires samples with equal lengths\");\n    }\n\n    if (x.length < 2) {\n        throw new Error(\n            \"sampleCovariance requires at least two data points in each sample\"\n        );\n    }\n\n    // determine the mean of each dataset so that we can judge each\n    // value of the dataset fairly as the difference from the mean. this\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\n    // does not suffer because of the difference in absolute values\n    var xmean = mean(x);\n    var ymean = mean(y);\n    var sum = 0;\n\n    // for each pair of values, the covariance increases when their\n    // difference from the mean is associated - if both are well above\n    // or if both are well below\n    // the mean, the covariance increases significantly.\n    for (var i = 0; i < x.length; i++) {\n        sum += (x[i] - xmean) * (y[i] - ymean);\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // the covariance is weighted by the length of the datasets.\n    return sum / besselsCorrection;\n}\n\n/**\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\n * is the sum of squared deviations from the mean. The sample variance\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\n * instead of dividing the sum of squared deviations by the length of the input,\n * it is divided by the length minus one. This corrects the bias in estimating\n * a value from a set that you don't know if full.\n *\n * References:\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\n *\n * @param {Array<number>} x a sample of two or more data points\n * @throws {Error} if the length of x is less than 2\n * @return {number} sample variance\n * @example\n * sampleVariance([1, 2, 3, 4, 5]); // => 2.5\n */\nfunction sampleVariance(x) {\n    if (x.length < 2) {\n        throw new Error(\"sampleVariance requires at least two data points\");\n    }\n\n    var sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    return sumSquaredDeviationsValue / besselsCorrection;\n}\n\n/**\n * The [sample standard deviation](http://en.wikipedia.org/wiki/Standard_deviation#Sample_standard_deviation)\n * is the square root of the sample variance.\n *\n * @param {Array<number>} x input array\n * @returns {number} sample standard deviation\n * @example\n * sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]).toFixed(2);\n * // => '2.14'\n */\nfunction sampleStandardDeviation(x) {\n    var sampleVarianceX = sampleVariance(x);\n    return Math.sqrt(sampleVarianceX);\n}\n\n/**\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\n * a measure of how correlated two datasets are, between -1 and 1\n *\n * @param {Array<number>} x first input\n * @param {Array<number>} y second input\n * @returns {number} sample correlation\n * @example\n * sampleCorrelation([1, 2, 3, 4, 5, 6], [2, 2, 3, 4, 5, 60]).toFixed(2);\n * // => '0.69'\n */\nfunction sampleCorrelation(x, y) {\n    var cov = sampleCovariance(x, y);\n    var xstd = sampleStandardDeviation(x);\n    var ystd = sampleStandardDeviation(y);\n\n    return cov / xstd / ystd;\n}\n\n/**\n * The [rank correlation](https://en.wikipedia.org/wiki/Rank_correlation) is\n * a measure of the strength of monotonic relationship between two arrays\n *\n * @param {Array<number>} x first input\n * @param {Array<number>} y second input\n * @returns {number} sample rank correlation\n */\nfunction sampleRankCorrelation(x, y) {\n    var xIndexes = x\n        .map(function (value, index) { return [value, index]; })\n        .sort(function (a, b) { return a[0] - b[0]; })\n        .map(function (pair) { return pair[1]; });\n    var yIndexes = y\n        .map(function (value, index) { return [value, index]; })\n        .sort(function (a, b) { return a[0] - b[0]; })\n        .map(function (pair) { return pair[1]; });\n\n    // At this step, we have an array of indexes\n    // that map from sorted numbers to their original indexes. We reverse\n    // that so that it is an array of the sorted destination index.\n    var xRanks = Array(xIndexes.length);\n    var yRanks = Array(xIndexes.length);\n    for (var i = 0; i < xIndexes.length; i++) {\n        xRanks[xIndexes[i]] = i;\n        yRanks[yIndexes[i]] = i;\n    }\n\n    return sampleCorrelation(xRanks, yRanks);\n}\n\n/**\n * [Skewness](http://en.wikipedia.org/wiki/Skewness) is\n * a measure of the extent to which a probability distribution of a\n * real-valued random variable \"leans\" to one side of the mean.\n * The skewness value can be positive or negative, or even undefined.\n *\n * Implementation is based on the adjusted Fisher-Pearson standardized\n * moment coefficient, which is the version found in Excel and several\n * statistical packages including Minitab, SAS and SPSS.\n *\n * @since 4.1.0\n * @param {Array<number>} x a sample of 3 or more data points\n * @returns {number} sample skewness\n * @throws {Error} if x has length less than 3\n * @example\n * sampleSkewness([2, 4, 6, 3, 1]); // => 0.590128656384365\n */\nfunction sampleSkewness(x) {\n    if (x.length < 3) {\n        throw new Error(\"sampleSkewness requires at least three data points\");\n    }\n\n    var meanValue = mean(x);\n    var tempValue;\n    var sumSquaredDeviations = 0;\n    var sumCubedDeviations = 0;\n\n    for (var i = 0; i < x.length; i++) {\n        tempValue = x[i] - meanValue;\n        sumSquaredDeviations += tempValue * tempValue;\n        sumCubedDeviations += tempValue * tempValue * tempValue;\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    var theSampleStandardDeviation = Math.sqrt(\n        sumSquaredDeviations / besselsCorrection\n    );\n\n    var n = x.length;\n    var cubedS = Math.pow(theSampleStandardDeviation, 3);\n\n    return (n * sumCubedDeviations) / ((n - 1) * (n - 2) * cubedS);\n}\n\n/**\n * [Kurtosis](http://en.wikipedia.org/wiki/Kurtosis) is\n * a measure of the heaviness of a distribution's tails relative to its\n * variance. The kurtosis value can be positive or negative, or even undefined.\n *\n * Implementation is based on Fisher's excess kurtosis definition and uses\n * unbiased moment estimators. This is the version found in Excel and available\n * in several statistical packages, including SAS and SciPy.\n *\n * @param {Array<number>} x a sample of 4 or more data points\n * @returns {number} sample kurtosis\n * @throws {Error} if x has length less than 4\n * @example\n * sampleKurtosis([1, 2, 2, 3, 5]); // => 1.4555765595463122\n */\nfunction sampleKurtosis(x) {\n    var n = x.length;\n\n    if (n < 4) {\n        throw new Error(\"sampleKurtosis requires at least four data points\");\n    }\n\n    var meanValue = mean(x);\n    var tempValue;\n    var secondCentralMoment = 0;\n    var fourthCentralMoment = 0;\n\n    for (var i = 0; i < n; i++) {\n        tempValue = x[i] - meanValue;\n        secondCentralMoment += tempValue * tempValue;\n        fourthCentralMoment += tempValue * tempValue * tempValue * tempValue;\n    }\n\n    return (\n        ((n - 1) / ((n - 2) * (n - 3))) *\n        ((n * (n + 1) * fourthCentralMoment) /\n            (secondCentralMoment * secondCentralMoment) -\n            3 * (n - 1))\n    );\n}\n\n/**\n * Implementation of [Heap's Algorithm](https://en.wikipedia.org/wiki/Heap%27s_algorithm)\n * for generating permutations.\n *\n * @param {Array} elements any type of data\n * @returns {Array<Array>} array of permutations\n */\nfunction permutationsHeap(elements) {\n    var indexes = new Array(elements.length);\n    var permutations = [elements.slice()];\n\n    for (var i = 0; i < elements.length; i++) {\n        indexes[i] = 0;\n    }\n\n    for (var i$1 = 0; i$1 < elements.length; ) {\n        if (indexes[i$1] < i$1) {\n            // At odd indexes, swap from indexes[i] instead\n            // of from the beginning of the array\n            var swapFrom = 0;\n            if (i$1 % 2 !== 0) {\n                swapFrom = indexes[i$1];\n            }\n\n            // swap between swapFrom and i, using\n            // a temporary variable as storage.\n            var temp = elements[swapFrom];\n            elements[swapFrom] = elements[i$1];\n            elements[i$1] = temp;\n\n            permutations.push(elements.slice());\n            indexes[i$1]++;\n            i$1 = 0;\n        } else {\n            indexes[i$1] = 0;\n            i$1++;\n        }\n    }\n\n    return permutations;\n}\n\n/**\n * Implementation of Combinations\n * Combinations are unique subsets of a collection - in this case, k x from a collection at a time.\n * https://en.wikipedia.org/wiki/Combination\n * @param {Array} x any type of data\n * @param {int} k the number of objects in each group (without replacement)\n * @returns {Array<Array>} array of permutations\n * @example\n * combinations([1, 2, 3], 2); // => [[1,2], [1,3], [2,3]]\n */\n\nfunction combinations(x, k) {\n    var i;\n    var subI;\n    var combinationList = [];\n    var subsetCombinations;\n    var next;\n\n    for (i = 0; i < x.length; i++) {\n        if (k === 1) {\n            combinationList.push([x[i]]);\n        } else {\n            subsetCombinations = combinations(x.slice(i + 1, x.length), k - 1);\n            for (subI = 0; subI < subsetCombinations.length; subI++) {\n                next = subsetCombinations[subI];\n                next.unshift(x[i]);\n                combinationList.push(next);\n            }\n        }\n    }\n    return combinationList;\n}\n\n/**\n * Implementation of [Combinations](https://en.wikipedia.org/wiki/Combination) with replacement\n * Combinations are unique subsets of a collection - in this case, k x from a collection at a time.\n * 'With replacement' means that a given element can be chosen multiple times.\n * Unlike permutation, order doesn't matter for combinations.\n *\n * @param {Array} x any type of data\n * @param {int} k the number of objects in each group (without replacement)\n * @returns {Array<Array>} array of permutations\n * @example\n * combinationsReplacement([1, 2], 2); // => [[1, 1], [1, 2], [2, 2]]\n */\nfunction combinationsReplacement(x, k) {\n    var combinationList = [];\n\n    for (var i = 0; i < x.length; i++) {\n        if (k === 1) {\n            // If we're requested to find only one element, we don't need\n            // to recurse: just push `x[i]` onto the list of combinations.\n            combinationList.push([x[i]]);\n        } else {\n            // Otherwise, recursively find combinations, given `k - 1`. Note that\n            // we request `k - 1`, so if you were looking for k=3 combinations, we're\n            // requesting k=2. This -1 gets reversed in the for loop right after this\n            // code, since we concatenate `x[i]` onto the selected combinations,\n            // bringing `k` back up to your requested level.\n            // This recursion may go many levels deep, since it only stops once\n            // k=1.\n            var subsetCombinations = combinationsReplacement(\n                x.slice(i, x.length),\n                k - 1\n            );\n\n            for (var j = 0; j < subsetCombinations.length; j++) {\n                combinationList.push([x[i]].concat(subsetCombinations[j]));\n            }\n        }\n    }\n\n    return combinationList;\n}\n\n/**\n * When adding a new value to a list, one does not have to necessary\n * recompute the mean of the list in linear time. They can instead use\n * this function to compute the new mean by providing the current mean,\n * the number of elements in the list that produced it and the new\n * value to add.\n *\n * @since 2.5.0\n * @param {number} mean current mean\n * @param {number} n number of items in the list\n * @param {number} newValue the added value\n * @returns {number} the new mean\n *\n * @example\n * addToMean(14, 5, 53); // => 20.5\n */\nfunction addToMean(mean, n, newValue) {\n    return mean + (newValue - mean) / (n + 1);\n}\n\n/**\n * When combining two lists of values for which one already knows the means,\n * one does not have to necessary recompute the mean of the combined lists in\n * linear time. They can instead use this function to compute the combined\n * mean by providing the mean & number of values of the first list and the mean\n * & number of values of the second list.\n *\n * @since 3.0.0\n * @param {number} mean1 mean of the first list\n * @param {number} n1 number of items in the first list\n * @param {number} mean2 mean of the second list\n * @param {number} n2 number of items in the second list\n * @returns {number} the combined mean\n *\n * @example\n * combineMeans(5, 3, 4, 3); // => 4.5\n */\nfunction combineMeans(mean1, n1, mean2, n2) {\n    return (mean1 * n1 + mean2 * n2) / (n1 + n2);\n}\n\n/**\n * When combining two lists of values for which one already knows the variances,\n * one does not have to necessary recompute the variance of the combined lists\n * in linear time. They can instead use this function to compute the combined\n * variance by providing the variance, mean & number of values of the first list\n * and the variance, mean & number of values of the second list.\n *\n * @since 3.0.0\n * @param {number} variance1 variance of the first list\n * @param {number} mean1 mean of the first list\n * @param {number} n1 number of items in the first list\n * @param {number} variance2 variance of the second list\n * @param {number} mean2 mean of the second list\n * @param {number} n2 number of items in the second list\n * @returns {number} the combined mean\n *\n * @example\n * combineVariances(14 / 3, 5, 3, 8 / 3, 4, 3); // => 47 / 12\n */\nfunction combineVariances(variance1, mean1, n1, variance2, mean2, n2) {\n    var newMean = combineMeans(mean1, n1, mean2, n2);\n\n    return (\n        (n1 * (variance1 + Math.pow(mean1 - newMean, 2)) +\n            n2 * (variance2 + Math.pow(mean2 - newMean, 2))) /\n        (n1 + n2)\n    );\n}\n\n/**\n * The [Geometric Mean](https://en.wikipedia.org/wiki/Geometric_mean) is\n * a mean function that is more useful for numbers in different\n * ranges.\n *\n * This is the nth root of the input numbers multiplied by each other.\n *\n * The geometric mean is often useful for\n * **[proportional growth](https://en.wikipedia.org/wiki/Geometric_mean#Proportional_growth)**: given\n * growth rates for multiple years, like _80%, 16.66% and 42.85%_, a simple\n * mean will incorrectly estimate an average growth rate, whereas a geometric\n * mean will correctly estimate a growth rate that, over those years,\n * will yield the same end value.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} geometric mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n * @example\n * var growthRates = [1.80, 1.166666, 1.428571];\n * var averageGrowth = ss.geometricMean(growthRates);\n * var averageGrowthRates = [averageGrowth, averageGrowth, averageGrowth];\n * var startingValue = 10;\n * var startingValueMean = 10;\n * growthRates.forEach(function(rate) {\n *   startingValue *= rate;\n * });\n * averageGrowthRates.forEach(function(rate) {\n *   startingValueMean *= rate;\n * });\n * startingValueMean === startingValue;\n */\nfunction geometricMean(x) {\n    if (x.length === 0) {\n        throw new Error(\"geometricMean requires at least one data point\");\n    }\n\n    // the starting value.\n    var value = 1;\n\n    for (var i = 0; i < x.length; i++) {\n        // the geometric mean is only valid for positive numbers\n        if (x[i] < 0) {\n            throw new Error(\n                \"geometricMean requires only non-negative numbers as input\"\n            );\n        }\n\n        // repeatedly multiply the value by each number\n        value *= x[i];\n    }\n\n    return Math.pow(value, 1 / x.length);\n}\n\n/**\n * The [log average](https://en.wikipedia.org/wiki/https://en.wikipedia.org/wiki/Geometric_mean#Relationship_with_logarithms)\n * is an equivalent way of computing the geometric mean of an array suitable for large or small products.\n *\n * It's found by calculating the average logarithm of the elements and exponentiating.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} geometric mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n */\nfunction logAverage(x) {\n    if (x.length === 0) {\n        throw new Error(\"logAverage requires at least one data point\");\n    }\n\n    var value = 0;\n    for (var i = 0; i < x.length; i++) {\n        if (x[i] < 0) {\n            throw new Error(\n                \"logAverage requires only non-negative numbers as input\"\n            );\n        }\n        value += Math.log(x[i]);\n    }\n\n    return Math.exp(value / x.length);\n}\n\n/**\n * The [Harmonic Mean](https://en.wikipedia.org/wiki/Harmonic_mean) is\n * a mean function typically used to find the average of rates.\n * This mean is calculated by taking the reciprocal of the arithmetic mean\n * of the reciprocals of the input numbers.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} harmonic mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n * @example\n * harmonicMean([2, 3]).toFixed(2) // => '2.40'\n */\nfunction harmonicMean(x) {\n    if (x.length === 0) {\n        throw new Error(\"harmonicMean requires at least one data point\");\n    }\n\n    var reciprocalSum = 0;\n\n    for (var i = 0; i < x.length; i++) {\n        // the harmonic mean is only valid for positive numbers\n        if (x[i] <= 0) {\n            throw new Error(\n                \"harmonicMean requires only positive numbers as input\"\n            );\n        }\n\n        reciprocalSum += 1 / x[i];\n    }\n\n    // divide n by the reciprocal sum\n    return x.length / reciprocalSum;\n}\n\n/**\n * The mean, _also known as average_,\n * is the sum of all values over the number of values.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * The simple mean uses the successive addition method internally\n * to calculate it's result. Errors in floating-point addition are\n * not accounted for, so if precision is required, the standard {@link mean}\n * method should be used instead.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n *\n * @param {Array<number>} x sample of one or more data points\n * @throws {Error} if the length of x is less than one\n * @returns {number} mean\n * @example\n * mean([0, 10]); // => 5\n */\nfunction meanSimple(x) {\n    if (x.length === 0) {\n        throw new Error(\"meanSimple requires at least one data point\");\n    }\n\n    return sumSimple(x) / x.length;\n}\n\n/**\n * The [median](http://en.wikipedia.org/wiki/Median) is\n * the middle number of a list. This is often a good indicator of 'the middle'\n * when there are outliers that skew the `mean()` value.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * The median isn't necessarily one of the elements in the list: the value\n * can be the average of two elements if the list has an even length\n * and the two central values are different.\n *\n * @param {Array<number>} sorted input\n * @returns {number} median value\n * @example\n * medianSorted([10, 2, 5, 100, 2, 1]); // => 52.5\n */\nfunction medianSorted(sorted) {\n    return quantileSorted(sorted, 0.5);\n}\n\n/**\n * When removing a value from a list, one does not have to necessary\n * recompute the mean of the list in linear time. They can instead use\n * this function to compute the new mean by providing the current mean,\n * the number of elements in the list that produced it and the value to remove.\n *\n * @since 3.0.0\n * @param {number} mean current mean\n * @param {number} n number of items in the list\n * @param {number} value the value to remove\n * @returns {number} the new mean\n *\n * @example\n * subtractFromMean(20.5, 6, 53); // => 14\n */\nfunction subtractFromMean(mean, n, value) {\n    return (mean * n - value) / (n - 1);\n}\n\n/**\n * The Root Mean Square (RMS) is\n * a mean function used as a measure of the magnitude of a set\n * of numbers, regardless of their sign.\n * This is the square root of the mean of the squares of the\n * input numbers.\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x a sample of one or more data points\n * @returns {number} root mean square\n * @throws {Error} if x is empty\n * @example\n * rootMeanSquare([-1, 1, -1, 1]); // => 1\n */\nfunction rootMeanSquare(x) {\n    if (x.length === 0) {\n        throw new Error(\"rootMeanSquare requires at least one data point\");\n    }\n\n    var sumOfSquares = 0;\n    for (var i = 0; i < x.length; i++) {\n        sumOfSquares += Math.pow(x[i], 2);\n    }\n\n    return Math.sqrt(sumOfSquares / x.length);\n}\n\n/**\n * The`coefficient of variation`_ is the ratio of the standard deviation to the mean.\n * .._`coefficient of variation`: https://en.wikipedia.org/wiki/Coefficient_of_variation\n *\n *\n * @param {Array} x input\n * @returns {number} coefficient of variation\n * @example\n * coefficientOfVariation([1, 2, 3, 4]).toFixed(3); // => 0.516\n * coefficientOfVariation([1, 2, 3, 4, 5]).toFixed(3); // => 0.527\n * coefficientOfVariation([-1, 0, 1, 2, 3, 4]).toFixed(3); // => 1.247\n */\nfunction coefficientOfVariation(x) {\n    return sampleStandardDeviation(x) / mean(x);\n}\n\n/**\n * This is to compute [a one-sample t-test](https://en.wikipedia.org/wiki/Student%27s_t-test#One-sample_t-test), comparing the mean\n * of a sample to a known value, x.\n *\n * in this case, we're trying to determine whether the\n * population mean is equal to the value that we know, which is `x`\n * here. Usually the results here are used to look up a\n * [p-value](http://en.wikipedia.org/wiki/P-value), which, for\n * a certain level of significance, will let you determine that the\n * null hypothesis can or cannot be rejected.\n *\n * @param {Array<number>} x sample of one or more numbers\n * @param {number} expectedValue expected value of the population mean\n * @returns {number} value\n * @example\n * tTest([1, 2, 3, 4, 5, 6], 3.385).toFixed(2); // => '0.16'\n */\nfunction tTest(x, expectedValue) {\n    // The mean of the sample\n    var sampleMean = mean(x);\n\n    // The standard deviation of the sample\n    var sd = standardDeviation(x);\n\n    // Square root the length of the sample\n    var rootN = Math.sqrt(x.length);\n\n    // returning the t value\n    return (sampleMean - expectedValue) / (sd / rootN);\n}\n\n/**\n * This is to compute [two sample t-test](http://en.wikipedia.org/wiki/Student's_t-test).\n * Tests whether \"mean(X)-mean(Y) = difference\", (\n * in the most common case, we often have `difference == 0` to test if two samples\n * are likely to be taken from populations with the same mean value) with\n * no prior knowledge on standard deviations of both samples\n * other than the fact that they have the same standard deviation.\n *\n * Usually the results here are used to look up a\n * [p-value](http://en.wikipedia.org/wiki/P-value), which, for\n * a certain level of significance, will let you determine that the\n * null hypothesis can or cannot be rejected.\n *\n * `diff` can be omitted if it equals 0.\n *\n * [This is used to reject](https://en.wikipedia.org/wiki/Exclusion_of_the_null_hypothesis)\n * a null hypothesis that the two populations that have been sampled into\n * `sampleX` and `sampleY` are equal to each other.\n *\n * @param {Array<number>} sampleX a sample as an array of numbers\n * @param {Array<number>} sampleY a sample as an array of numbers\n * @param {number} [difference=0]\n * @returns {number|null} test result\n *\n * @example\n * tTestTwoSample([1, 2, 3, 4], [3, 4, 5, 6], 0); // => -2.1908902300206643\n */\nfunction tTestTwoSample(sampleX, sampleY, difference) {\n    var n = sampleX.length;\n    var m = sampleY.length;\n\n    // If either sample doesn't actually have any values, we can't\n    // compute this at all, so we return `null`.\n    if (!n || !m) {\n        return null;\n    }\n\n    // default difference (mu) is zero\n    if (!difference) {\n        difference = 0;\n    }\n\n    var meanX = mean(sampleX);\n    var meanY = mean(sampleY);\n    var sampleVarianceX = sampleVariance(sampleX);\n    var sampleVarianceY = sampleVariance(sampleY);\n\n    if (\n        typeof meanX === \"number\" &&\n        typeof meanY === \"number\" &&\n        typeof sampleVarianceX === \"number\" &&\n        typeof sampleVarianceY === \"number\"\n    ) {\n        var weightedVariance =\n            ((n - 1) * sampleVarianceX + (m - 1) * sampleVarianceY) /\n            (n + m - 2);\n\n        return (\n            (meanX - meanY - difference) /\n            Math.sqrt(weightedVariance * (1 / n + 1 / m))\n        );\n    }\n}\n\n/**\n * This function calculates the Wilcoxon rank sum statistic for the first sample\n * with respect to the second. The Wilcoxon rank sum test is a non-parametric\n * alternative to the t-test which is equivalent to the\n * [Mann-Whitney U test](https://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U_test).\n * The statistic is calculated by pooling all the observations together, ranking them,\n * and then summing the ranks associated with one of the samples. If this rank sum is\n * sufficiently large or small we reject the hypothesis that the two samples come\n * from the same distribution in favor of the alternative that one is shifted with\n * respect to the other.\n *\n * @param {Array<number>} sampleX a sample as an array of numbers\n * @param {Array<number>} sampleY a sample as an array of numbers\n * @returns {number} rank sum for sampleX\n *\n * @example\n * wilcoxonRankSum([1, 4, 8], [9, 12, 15]); // => 6\n */\nfunction wilcoxonRankSum(sampleX, sampleY) {\n    if (!sampleX.length || !sampleY.length) {\n        throw new Error(\"Neither sample can be empty\");\n    }\n\n    var pooledSamples = sampleX\n        .map(function (x) { return ({ label: \"x\", value: x }); })\n        .concat(sampleY.map(function (y) { return ({ label: \"y\", value: y }); }))\n        .sort(function (a, b) { return a.value - b.value; });\n\n    for (var rank = 0; rank < pooledSamples.length; rank++) {\n        pooledSamples[rank].rank = rank;\n    }\n\n    var tiedRanks = [pooledSamples[0].rank];\n    for (var i = 1; i < pooledSamples.length; i++) {\n        if (pooledSamples[i].value === pooledSamples[i - 1].value) {\n            tiedRanks.push(pooledSamples[i].rank);\n            if (i === pooledSamples.length - 1) {\n                replaceRanksInPlace(pooledSamples, tiedRanks);\n            }\n        } else if (tiedRanks.length > 1) {\n            replaceRanksInPlace(pooledSamples, tiedRanks);\n        } else {\n            tiedRanks = [pooledSamples[i].rank];\n        }\n    }\n\n    function replaceRanksInPlace(pooledSamples, tiedRanks) {\n        var average = (tiedRanks[0] + tiedRanks[tiedRanks.length - 1]) / 2;\n        for (var i = 0; i < tiedRanks.length; i++) {\n            pooledSamples[tiedRanks[i]].rank = average;\n        }\n    }\n\n    var rankSum = 0;\n\n    for (var i$1 = 0; i$1 < pooledSamples.length; i$1++) {\n        var sample = pooledSamples[i$1];\n        if (sample.label === \"x\") {\n            rankSum += sample.rank + 1;\n        }\n    }\n\n    return rankSum;\n}\n\n/**\n * [Bayesian Classifier](http://en.wikipedia.org/wiki/Naive_Bayes_classifier)\n *\n * This is a naïve bayesian classifier that takes\n * singly-nested objects.\n *\n * @class\n * @example\n * var bayes = new BayesianClassifier();\n * bayes.train({\n *   species: 'Cat'\n * }, 'animal');\n * var result = bayes.score({\n *   species: 'Cat'\n * })\n * // result\n * // {\n * //   animal: 1\n * // }\n */\nvar BayesianClassifier = function BayesianClassifier() {\n    // The number of items that are currently\n    // classified in the model\n    this.totalCount = 0;\n    // Every item classified in the model\n    this.data = {};\n};\n\n/**\n * Train the classifier with a new item, which has a single\n * dimension of Javascript literal keys and values.\n *\n * @param {Object} item an object with singly-deep properties\n * @param {string} category the category this item belongs to\n * @return {undefined} adds the item to the classifier\n */\nBayesianClassifier.prototype.train = function train (item, category) {\n    // If the data object doesn't have any values\n    // for this category, create a new object for it.\n    if (!this.data[category]) {\n        this.data[category] = {};\n    }\n\n    // Iterate through each key in the item.\n    for (var k in item) {\n        var v = item[k];\n        // Initialize the nested object `data[category][k][item[k]]`\n        // with an object of keys that equal 0.\n        if (this.data[category][k] === undefined) {\n            this.data[category][k] = {};\n        }\n        if (this.data[category][k][v] === undefined) {\n            this.data[category][k][v] = 0;\n        }\n\n        // And increment the key for this key/value combination.\n        this.data[category][k][v]++;\n    }\n\n    // Increment the number of items classified\n    this.totalCount++;\n};\n\n/**\n * Generate a score of how well this item matches all\n * possible categories based on its attributes\n *\n * @param {Object} item an item in the same format as with train\n * @returns {Object} of probabilities that this item belongs to a\n * given category.\n */\nBayesianClassifier.prototype.score = function score (item) {\n    // Initialize an empty array of odds per category.\n    var odds = {};\n    var category;\n    // Iterate through each key in the item,\n    // then iterate through each category that has been used\n    // in previous calls to `.train()`\n    for (var k in item) {\n        var v = item[k];\n        for (category in this.data) {\n            // Create an empty object for storing key - value combinations\n            // for this category.\n            odds[category] = {};\n\n            // If this item doesn't even have a property, it counts for nothing,\n            // but if it does have the property that we're looking for from\n            // the item to categorize, it counts based on how popular it is\n            // versus the whole population.\n            if (this.data[category][k]) {\n                odds[category][k + \"_\" + v] =\n                    (this.data[category][k][v] || 0) / this.totalCount;\n            } else {\n                odds[category][k + \"_\" + v] = 0;\n            }\n        }\n    }\n\n    // Set up a new object that will contain sums of these odds by category\n    var oddsSums = {};\n\n    for (category in odds) {\n        // Tally all of the odds for each category-combination pair -\n        // the non-existence of a category does not add anything to the\n        // score.\n        oddsSums[category] = 0;\n        for (var combination in odds[category]) {\n            oddsSums[category] += odds[category][combination];\n        }\n    }\n\n    return oddsSums;\n};\n\n/**\n * This is a single-layer [Perceptron Classifier](http://en.wikipedia.org/wiki/Perceptron) that takes\n * arrays of numbers and predicts whether they should be classified\n * as either 0 or 1 (negative or positive examples).\n * @class\n * @example\n * // Create the model\n * var p = new PerceptronModel();\n * // Train the model with input with a diagonal boundary.\n * for (var i = 0; i < 5; i++) {\n *     p.train([1, 1], 1);\n *     p.train([0, 1], 0);\n *     p.train([1, 0], 0);\n *     p.train([0, 0], 0);\n * }\n * p.predict([0, 0]); // 0\n * p.predict([0, 1]); // 0\n * p.predict([1, 0]); // 0\n * p.predict([1, 1]); // 1\n */\nvar PerceptronModel = function PerceptronModel() {\n    // The weights, or coefficients of the model;\n    // weights are only populated when training with data.\n    this.weights = [];\n    // The bias term, or intercept; it is also a weight but\n    // it's stored separately for convenience as it is always\n    // multiplied by one.\n    this.bias = 0;\n};\n/**\n * **Predict**: Use an array of features with the weight array and bias\n * to predict whether an example is labeled 0 or 1.\n *\n * @param {Array<number>} features an array of features as numbers\n * @returns {number} 1 if the score is over 0, otherwise 0\n */\nPerceptronModel.prototype.predict = function predict (features) {\n    // Only predict if previously trained\n    // on the same size feature array(s).\n    if (features.length !== this.weights.length) {\n        return null;\n    }\n\n    // Calculate the sum of features times weights,\n    // with the bias added (implicitly times one).\n    var score = 0;\n    for (var i = 0; i < this.weights.length; i++) {\n        score += this.weights[i] * features[i];\n    }\n    score += this.bias;\n\n    // Classify as 1 if the score is over 0, otherwise 0.\n    if (score > 0) {\n        return 1;\n    } else {\n        return 0;\n    }\n};\n\n/**\n * **Train** the classifier with a new example, which is\n * a numeric array of features and a 0 or 1 label.\n *\n * @param {Array<number>} features an array of features as numbers\n * @param {number} label either 0 or 1\n * @returns {PerceptronModel} this\n */\nPerceptronModel.prototype.train = function train (features, label) {\n    // Require that only labels of 0 or 1 are considered.\n    if (label !== 0 && label !== 1) {\n        return null;\n    }\n    // The length of the feature array determines\n    // the length of the weight array.\n    // The perceptron will continue learning as long as\n    // it keeps seeing feature arrays of the same length.\n    // When it sees a new data shape, it initializes.\n    if (features.length !== this.weights.length) {\n        this.weights = features;\n        this.bias = 1;\n    }\n    // Make a prediction based on current weights.\n    var prediction = this.predict(features);\n    // Update the weights if the prediction is wrong.\n    if (typeof prediction === \"number\" && prediction !== label) {\n        var gradient = label - prediction;\n        for (var i = 0; i < this.weights.length; i++) {\n            this.weights[i] += gradient * features[i];\n        }\n        this.bias += gradient;\n    }\n    return this;\n};\n\n/**\n * We use `ε`, epsilon, as a stopping criterion when we want to iterate\n * until we're \"close enough\". Epsilon is a very small number: for\n * simple statistics, that number is **0.0001**\n *\n * This is used in calculations like the binomialDistribution, in which\n * the process of finding a value is [iterative](https://en.wikipedia.org/wiki/Iterative_method):\n * it progresses until it is close enough.\n *\n * Below is an example of using epsilon in [gradient descent](https://en.wikipedia.org/wiki/Gradient_descent),\n * where we're trying to find a local minimum of a function's derivative,\n * given by the `fDerivative` method.\n *\n * @example\n * // From calculation, we expect that the local minimum occurs at x=9/4\n * var x_old = 0;\n * // The algorithm starts at x=6\n * var x_new = 6;\n * var stepSize = 0.01;\n *\n * function fDerivative(x) {\n *   return 4 * Math.pow(x, 3) - 9 * Math.pow(x, 2);\n * }\n *\n * // The loop runs until the difference between the previous\n * // value and the current value is smaller than epsilon - a rough\n * // meaure of 'close enough'\n * while (Math.abs(x_new - x_old) > ss.epsilon) {\n *   x_old = x_new;\n *   x_new = x_old - stepSize * fDerivative(x_old);\n * }\n *\n * console.log('Local minimum occurs at', x_new);\n */\nvar epsilon = 0.0001;\n\n/**\n * A [Factorial](https://en.wikipedia.org/wiki/Factorial), usually written n!, is the product of all positive\n * integers less than or equal to n. Often factorial is implemented\n * recursively, but this iterative approach is significantly faster\n * and simpler.\n *\n * @param {number} n input, must be an integer number 1 or greater\n * @returns {number} factorial: n!\n * @throws {Error} if n is less than 0 or not an integer\n * @example\n * factorial(5); // => 120\n */\nfunction factorial(n) {\n    // factorial is mathematically undefined for negative numbers\n    if (n < 0) {\n        throw new Error(\"factorial requires a non-negative value\");\n    }\n\n    if (Math.floor(n) !== n) {\n        throw new Error(\"factorial requires an integer input\");\n    }\n\n    // typically you'll expand the factorial function going down, like\n    // 5! = 5 * 4 * 3 * 2 * 1. This is going in the opposite direction,\n    // counting from 2 up to the number in question, and since anything\n    // multiplied by 1 is itself, the loop only needs to start at 2.\n    var accumulator = 1;\n    for (var i = 2; i <= n; i++) {\n        // for each number up to and including the number `n`, multiply\n        // the accumulator my that number.\n        accumulator *= i;\n    }\n    return accumulator;\n}\n\n/**\n * Compute the [gamma function](https://en.wikipedia.org/wiki/Gamma_function) of a value using Nemes' approximation.\n * The gamma of n is equivalent to (n-1)!, but unlike the factorial function, gamma is defined for all real n except zero\n * and negative integers (where NaN is returned). Note, the gamma function is also well-defined for complex numbers,\n * though this implementation currently does not handle complex numbers as input values.\n * Nemes' approximation is defined [here](https://arxiv.org/abs/1003.6020) as Theorem 2.2.\n * Negative values use [Euler's reflection formula](https://en.wikipedia.org/wiki/Gamma_function#Properties) for computation.\n *\n * @param {number} n Any real number except for zero and negative integers.\n * @returns {number} The gamma of the input value.\n *\n * @example\n * gamma(11.5); // 11899423.084037038\n * gamma(-11.5); // 2.29575810481609e-8\n * gamma(5); // 24\n */\nfunction gamma(n) {\n    if (Number.isInteger(n)) {\n        if (n <= 0) {\n            // gamma not defined for zero or negative integers\n            return NaN;\n        } else {\n            // use factorial for integer inputs\n            return factorial(n - 1);\n        }\n    }\n\n    // Decrement n, because approximation is defined for n - 1\n    n--;\n\n    if (n < 0) {\n        // Use Euler's reflection formula for negative inputs\n        // see:  https://en.wikipedia.org/wiki/Gamma_function#Properties\n        return Math.PI / (Math.sin(Math.PI * -n) * gamma(-n));\n    } else {\n        // Nemes' expansion approximation\n        var seriesCoefficient =\n            Math.pow(n / Math.E, n) * Math.sqrt(2 * Math.PI * (n + 1 / 6));\n\n        var seriesDenom = n + 1 / 4;\n\n        var seriesExpansion =\n            1 +\n            1 / 144 / Math.pow(seriesDenom, 2) -\n            1 / 12960 / Math.pow(seriesDenom, 3) -\n            257 / 207360 / Math.pow(seriesDenom, 4) -\n            52 / 2612736 / Math.pow(seriesDenom, 5) +\n            5741173 / 9405849600 / Math.pow(seriesDenom, 6) +\n            37529 / 18811699200 / Math.pow(seriesDenom, 7);\n\n        return seriesCoefficient * seriesExpansion;\n    }\n}\n\n// Define series coefficients\nvar COEFFICIENTS = [\n    0.99999999999999709182,\n    57.156235665862923517,\n    -59.597960355475491248,\n    14.136097974741747174,\n    -0.49191381609762019978,\n    0.33994649984811888699e-4,\n    0.46523628927048575665e-4,\n    -0.98374475304879564677e-4,\n    0.15808870322491248884e-3,\n    -0.21026444172410488319e-3,\n    0.2174396181152126432e-3,\n    -0.16431810653676389022e-3,\n    0.84418223983852743293e-4,\n    -0.2619083840158140867e-4,\n    0.36899182659531622704e-5\n];\n\nvar g = 607 / 128;\nvar LOGSQRT2PI = Math.log(Math.sqrt(2 * Math.PI));\n\n/**\n * Compute the logarithm of the [gamma function](https://en.wikipedia.org/wiki/Gamma_function) of a value using Lanczos' approximation.\n * This function takes as input any real-value n greater than 0.\n * This function is useful for values of n too large for the normal gamma function (n > 165).\n * The code is based on Lanczo's Gamma approximation, defined [here](http://my.fit.edu/~gabdo/gamma.txt).\n *\n * @param {number} n Any real number greater than zero.\n * @returns {number} The logarithm of gamma of the input value.\n *\n * @example\n * gammaln(500); // 2605.1158503617335\n * gammaln(2.4); // 0.21685932244884043\n */\nfunction gammaln(n) {\n    // Return infinity if value not in domain\n    if (n <= 0) {\n        return Infinity;\n    }\n\n    // Decrement n, because approximation is defined for n - 1\n    n--;\n\n    // Create series approximation\n    var a = COEFFICIENTS[0];\n\n    for (var i = 1; i < 15; i++) {\n        a += COEFFICIENTS[i] / (n + i);\n    }\n\n    var tmp = g + 0.5 + n;\n\n    // Return natural logarithm of gamma(n)\n    return LOGSQRT2PI + Math.log(a) - tmp + (n + 0.5) * Math.log(tmp);\n}\n\n/**\n * The [Bernoulli distribution](http://en.wikipedia.org/wiki/Bernoulli_distribution)\n * is the probability discrete\n * distribution of a random variable which takes value 1 with success\n * probability `p` and value 0 with failure\n * probability `q` = 1 - `p`. It can be used, for example, to represent the\n * toss of a coin, where \"1\" is defined to mean \"heads\" and \"0\" is defined\n * to mean \"tails\" (or vice versa). It is\n * a special case of a Binomial Distribution\n * where `n` = 1.\n *\n * @param {number} p input value, between 0 and 1 inclusive\n * @returns {number[]} values of bernoulli distribution at this point\n * @throws {Error} if p is outside 0 and 1\n * @example\n * bernoulliDistribution(0.3); // => [0.7, 0.3]\n */\nfunction bernoulliDistribution(p) /*: number[] */ {\n    // Check that `p` is a valid probability (0 ≤ p ≤ 1)\n    if (p < 0 || p > 1) {\n        throw new Error(\n            \"bernoulliDistribution requires probability to be between 0 and 1 inclusive\"\n        );\n    }\n\n    return [1 - p, p];\n}\n\n/**\n * The [Binomial Distribution](http://en.wikipedia.org/wiki/Binomial_distribution) is the discrete probability\n * distribution of the number of successes in a sequence of n independent yes/no experiments, each of which yields\n * success with probability `probability`. Such a success/failure experiment is also called a Bernoulli experiment or\n * Bernoulli trial; when trials = 1, the Binomial Distribution is a Bernoulli Distribution.\n *\n * @param {number} trials number of trials to simulate\n * @param {number} probability\n * @returns {number[]} output\n */\nfunction binomialDistribution(trials, probability) /*: ?number[] */ {\n    // Check that `p` is a valid probability (0 ≤ p ≤ 1),\n    // that `n` is an integer, strictly positive.\n    if (probability < 0 || probability > 1 || trials <= 0 || trials % 1 !== 0) {\n        return undefined;\n    }\n\n    // We initialize `x`, the random variable, and `accumulator`, an accumulator\n    // for the cumulative distribution function to 0. `distribution_functions`\n    // is the object we'll return with the `probability_of_x` and the\n    // `cumulativeProbability_of_x`, as well as the calculated mean &\n    // variance. We iterate until the `cumulativeProbability_of_x` is\n    // within `epsilon` of 1.0.\n    var x = 0;\n    var cumulativeProbability = 0;\n    var cells = [];\n    var binomialCoefficient = 1;\n\n    // This algorithm iterates through each potential outcome,\n    // until the `cumulativeProbability` is very close to 1, at\n    // which point we've defined the vast majority of outcomes\n    do {\n        // a [probability mass function](https://en.wikipedia.org/wiki/Probability_mass_function)\n        cells[x] =\n            binomialCoefficient *\n            Math.pow(probability, x) *\n            Math.pow(1 - probability, trials - x);\n        cumulativeProbability += cells[x];\n        x++;\n        binomialCoefficient = (binomialCoefficient * (trials - x + 1)) / x;\n        // when the cumulativeProbability is nearly 1, we've calculated\n        // the useful range of this distribution\n    } while (cumulativeProbability < 1 - epsilon);\n\n    return cells;\n}\n\n/**\n * The [Poisson Distribution](http://en.wikipedia.org/wiki/Poisson_distribution)\n * is a discrete probability distribution that expresses the probability\n * of a given number of events occurring in a fixed interval of time\n * and/or space if these events occur with a known average rate and\n * independently of the time since the last event.\n *\n * The Poisson Distribution is characterized by the strictly positive\n * mean arrival or occurrence rate, `λ`.\n *\n * @param {number} lambda location poisson distribution\n * @returns {number[]} values of poisson distribution at that point\n */\nfunction poissonDistribution(lambda) /*: ?number[] */ {\n    // Check that lambda is strictly positive\n    if (lambda <= 0) {\n        return undefined;\n    }\n\n    // our current place in the distribution\n    var x = 0;\n    // and we keep track of the current cumulative probability, in\n    // order to know when to stop calculating chances.\n    var cumulativeProbability = 0;\n    // the calculated cells to be returned\n    var cells = [];\n    var factorialX = 1;\n\n    // This algorithm iterates through each potential outcome,\n    // until the `cumulativeProbability` is very close to 1, at\n    // which point we've defined the vast majority of outcomes\n    do {\n        // a [probability mass function](https://en.wikipedia.org/wiki/Probability_mass_function)\n        cells[x] = (Math.exp(-lambda) * Math.pow(lambda, x)) / factorialX;\n        cumulativeProbability += cells[x];\n        x++;\n        factorialX *= x;\n        // when the cumulativeProbability is nearly 1, we've calculated\n        // the useful range of this distribution\n    } while (cumulativeProbability < 1 - epsilon);\n\n    return cells;\n}\n\n/**\n * **Percentage Points of the χ2 (Chi-Squared) Distribution**\n *\n * The [χ2 (Chi-Squared) Distribution](http://en.wikipedia.org/wiki/Chi-squared_distribution) is used in the common\n * chi-squared tests for goodness of fit of an observed distribution to a theoretical one, the independence of two\n * criteria of classification of qualitative data, and in confidence interval estimation for a population standard\n * deviation of a normal distribution from a sample standard deviation.\n *\n * Values from Appendix 1, Table III of William W. Hines & Douglas C. Montgomery, \"Probability and Statistics in\n * Engineering and Management Science\", Wiley (1980).\n */\nvar chiSquaredDistributionTable = {\n    1: {\n        0.995: 0,\n        0.99: 0,\n        0.975: 0,\n        0.95: 0,\n        0.9: 0.02,\n        0.5: 0.45,\n        0.1: 2.71,\n        0.05: 3.84,\n        0.025: 5.02,\n        0.01: 6.63,\n        0.005: 7.88\n    },\n    2: {\n        0.995: 0.01,\n        0.99: 0.02,\n        0.975: 0.05,\n        0.95: 0.1,\n        0.9: 0.21,\n        0.5: 1.39,\n        0.1: 4.61,\n        0.05: 5.99,\n        0.025: 7.38,\n        0.01: 9.21,\n        0.005: 10.6\n    },\n    3: {\n        0.995: 0.07,\n        0.99: 0.11,\n        0.975: 0.22,\n        0.95: 0.35,\n        0.9: 0.58,\n        0.5: 2.37,\n        0.1: 6.25,\n        0.05: 7.81,\n        0.025: 9.35,\n        0.01: 11.34,\n        0.005: 12.84\n    },\n    4: {\n        0.995: 0.21,\n        0.99: 0.3,\n        0.975: 0.48,\n        0.95: 0.71,\n        0.9: 1.06,\n        0.5: 3.36,\n        0.1: 7.78,\n        0.05: 9.49,\n        0.025: 11.14,\n        0.01: 13.28,\n        0.005: 14.86\n    },\n    5: {\n        0.995: 0.41,\n        0.99: 0.55,\n        0.975: 0.83,\n        0.95: 1.15,\n        0.9: 1.61,\n        0.5: 4.35,\n        0.1: 9.24,\n        0.05: 11.07,\n        0.025: 12.83,\n        0.01: 15.09,\n        0.005: 16.75\n    },\n    6: {\n        0.995: 0.68,\n        0.99: 0.87,\n        0.975: 1.24,\n        0.95: 1.64,\n        0.9: 2.2,\n        0.5: 5.35,\n        0.1: 10.65,\n        0.05: 12.59,\n        0.025: 14.45,\n        0.01: 16.81,\n        0.005: 18.55\n    },\n    7: {\n        0.995: 0.99,\n        0.99: 1.25,\n        0.975: 1.69,\n        0.95: 2.17,\n        0.9: 2.83,\n        0.5: 6.35,\n        0.1: 12.02,\n        0.05: 14.07,\n        0.025: 16.01,\n        0.01: 18.48,\n        0.005: 20.28\n    },\n    8: {\n        0.995: 1.34,\n        0.99: 1.65,\n        0.975: 2.18,\n        0.95: 2.73,\n        0.9: 3.49,\n        0.5: 7.34,\n        0.1: 13.36,\n        0.05: 15.51,\n        0.025: 17.53,\n        0.01: 20.09,\n        0.005: 21.96\n    },\n    9: {\n        0.995: 1.73,\n        0.99: 2.09,\n        0.975: 2.7,\n        0.95: 3.33,\n        0.9: 4.17,\n        0.5: 8.34,\n        0.1: 14.68,\n        0.05: 16.92,\n        0.025: 19.02,\n        0.01: 21.67,\n        0.005: 23.59\n    },\n    10: {\n        0.995: 2.16,\n        0.99: 2.56,\n        0.975: 3.25,\n        0.95: 3.94,\n        0.9: 4.87,\n        0.5: 9.34,\n        0.1: 15.99,\n        0.05: 18.31,\n        0.025: 20.48,\n        0.01: 23.21,\n        0.005: 25.19\n    },\n    11: {\n        0.995: 2.6,\n        0.99: 3.05,\n        0.975: 3.82,\n        0.95: 4.57,\n        0.9: 5.58,\n        0.5: 10.34,\n        0.1: 17.28,\n        0.05: 19.68,\n        0.025: 21.92,\n        0.01: 24.72,\n        0.005: 26.76\n    },\n    12: {\n        0.995: 3.07,\n        0.99: 3.57,\n        0.975: 4.4,\n        0.95: 5.23,\n        0.9: 6.3,\n        0.5: 11.34,\n        0.1: 18.55,\n        0.05: 21.03,\n        0.025: 23.34,\n        0.01: 26.22,\n        0.005: 28.3\n    },\n    13: {\n        0.995: 3.57,\n        0.99: 4.11,\n        0.975: 5.01,\n        0.95: 5.89,\n        0.9: 7.04,\n        0.5: 12.34,\n        0.1: 19.81,\n        0.05: 22.36,\n        0.025: 24.74,\n        0.01: 27.69,\n        0.005: 29.82\n    },\n    14: {\n        0.995: 4.07,\n        0.99: 4.66,\n        0.975: 5.63,\n        0.95: 6.57,\n        0.9: 7.79,\n        0.5: 13.34,\n        0.1: 21.06,\n        0.05: 23.68,\n        0.025: 26.12,\n        0.01: 29.14,\n        0.005: 31.32\n    },\n    15: {\n        0.995: 4.6,\n        0.99: 5.23,\n        0.975: 6.27,\n        0.95: 7.26,\n        0.9: 8.55,\n        0.5: 14.34,\n        0.1: 22.31,\n        0.05: 25,\n        0.025: 27.49,\n        0.01: 30.58,\n        0.005: 32.8\n    },\n    16: {\n        0.995: 5.14,\n        0.99: 5.81,\n        0.975: 6.91,\n        0.95: 7.96,\n        0.9: 9.31,\n        0.5: 15.34,\n        0.1: 23.54,\n        0.05: 26.3,\n        0.025: 28.85,\n        0.01: 32,\n        0.005: 34.27\n    },\n    17: {\n        0.995: 5.7,\n        0.99: 6.41,\n        0.975: 7.56,\n        0.95: 8.67,\n        0.9: 10.09,\n        0.5: 16.34,\n        0.1: 24.77,\n        0.05: 27.59,\n        0.025: 30.19,\n        0.01: 33.41,\n        0.005: 35.72\n    },\n    18: {\n        0.995: 6.26,\n        0.99: 7.01,\n        0.975: 8.23,\n        0.95: 9.39,\n        0.9: 10.87,\n        0.5: 17.34,\n        0.1: 25.99,\n        0.05: 28.87,\n        0.025: 31.53,\n        0.01: 34.81,\n        0.005: 37.16\n    },\n    19: {\n        0.995: 6.84,\n        0.99: 7.63,\n        0.975: 8.91,\n        0.95: 10.12,\n        0.9: 11.65,\n        0.5: 18.34,\n        0.1: 27.2,\n        0.05: 30.14,\n        0.025: 32.85,\n        0.01: 36.19,\n        0.005: 38.58\n    },\n    20: {\n        0.995: 7.43,\n        0.99: 8.26,\n        0.975: 9.59,\n        0.95: 10.85,\n        0.9: 12.44,\n        0.5: 19.34,\n        0.1: 28.41,\n        0.05: 31.41,\n        0.025: 34.17,\n        0.01: 37.57,\n        0.005: 40\n    },\n    21: {\n        0.995: 8.03,\n        0.99: 8.9,\n        0.975: 10.28,\n        0.95: 11.59,\n        0.9: 13.24,\n        0.5: 20.34,\n        0.1: 29.62,\n        0.05: 32.67,\n        0.025: 35.48,\n        0.01: 38.93,\n        0.005: 41.4\n    },\n    22: {\n        0.995: 8.64,\n        0.99: 9.54,\n        0.975: 10.98,\n        0.95: 12.34,\n        0.9: 14.04,\n        0.5: 21.34,\n        0.1: 30.81,\n        0.05: 33.92,\n        0.025: 36.78,\n        0.01: 40.29,\n        0.005: 42.8\n    },\n    23: {\n        0.995: 9.26,\n        0.99: 10.2,\n        0.975: 11.69,\n        0.95: 13.09,\n        0.9: 14.85,\n        0.5: 22.34,\n        0.1: 32.01,\n        0.05: 35.17,\n        0.025: 38.08,\n        0.01: 41.64,\n        0.005: 44.18\n    },\n    24: {\n        0.995: 9.89,\n        0.99: 10.86,\n        0.975: 12.4,\n        0.95: 13.85,\n        0.9: 15.66,\n        0.5: 23.34,\n        0.1: 33.2,\n        0.05: 36.42,\n        0.025: 39.36,\n        0.01: 42.98,\n        0.005: 45.56\n    },\n    25: {\n        0.995: 10.52,\n        0.99: 11.52,\n        0.975: 13.12,\n        0.95: 14.61,\n        0.9: 16.47,\n        0.5: 24.34,\n        0.1: 34.28,\n        0.05: 37.65,\n        0.025: 40.65,\n        0.01: 44.31,\n        0.005: 46.93\n    },\n    26: {\n        0.995: 11.16,\n        0.99: 12.2,\n        0.975: 13.84,\n        0.95: 15.38,\n        0.9: 17.29,\n        0.5: 25.34,\n        0.1: 35.56,\n        0.05: 38.89,\n        0.025: 41.92,\n        0.01: 45.64,\n        0.005: 48.29\n    },\n    27: {\n        0.995: 11.81,\n        0.99: 12.88,\n        0.975: 14.57,\n        0.95: 16.15,\n        0.9: 18.11,\n        0.5: 26.34,\n        0.1: 36.74,\n        0.05: 40.11,\n        0.025: 43.19,\n        0.01: 46.96,\n        0.005: 49.65\n    },\n    28: {\n        0.995: 12.46,\n        0.99: 13.57,\n        0.975: 15.31,\n        0.95: 16.93,\n        0.9: 18.94,\n        0.5: 27.34,\n        0.1: 37.92,\n        0.05: 41.34,\n        0.025: 44.46,\n        0.01: 48.28,\n        0.005: 50.99\n    },\n    29: {\n        0.995: 13.12,\n        0.99: 14.26,\n        0.975: 16.05,\n        0.95: 17.71,\n        0.9: 19.77,\n        0.5: 28.34,\n        0.1: 39.09,\n        0.05: 42.56,\n        0.025: 45.72,\n        0.01: 49.59,\n        0.005: 52.34\n    },\n    30: {\n        0.995: 13.79,\n        0.99: 14.95,\n        0.975: 16.79,\n        0.95: 18.49,\n        0.9: 20.6,\n        0.5: 29.34,\n        0.1: 40.26,\n        0.05: 43.77,\n        0.025: 46.98,\n        0.01: 50.89,\n        0.005: 53.67\n    },\n    40: {\n        0.995: 20.71,\n        0.99: 22.16,\n        0.975: 24.43,\n        0.95: 26.51,\n        0.9: 29.05,\n        0.5: 39.34,\n        0.1: 51.81,\n        0.05: 55.76,\n        0.025: 59.34,\n        0.01: 63.69,\n        0.005: 66.77\n    },\n    50: {\n        0.995: 27.99,\n        0.99: 29.71,\n        0.975: 32.36,\n        0.95: 34.76,\n        0.9: 37.69,\n        0.5: 49.33,\n        0.1: 63.17,\n        0.05: 67.5,\n        0.025: 71.42,\n        0.01: 76.15,\n        0.005: 79.49\n    },\n    60: {\n        0.995: 35.53,\n        0.99: 37.48,\n        0.975: 40.48,\n        0.95: 43.19,\n        0.9: 46.46,\n        0.5: 59.33,\n        0.1: 74.4,\n        0.05: 79.08,\n        0.025: 83.3,\n        0.01: 88.38,\n        0.005: 91.95\n    },\n    70: {\n        0.995: 43.28,\n        0.99: 45.44,\n        0.975: 48.76,\n        0.95: 51.74,\n        0.9: 55.33,\n        0.5: 69.33,\n        0.1: 85.53,\n        0.05: 90.53,\n        0.025: 95.02,\n        0.01: 100.42,\n        0.005: 104.22\n    },\n    80: {\n        0.995: 51.17,\n        0.99: 53.54,\n        0.975: 57.15,\n        0.95: 60.39,\n        0.9: 64.28,\n        0.5: 79.33,\n        0.1: 96.58,\n        0.05: 101.88,\n        0.025: 106.63,\n        0.01: 112.33,\n        0.005: 116.32\n    },\n    90: {\n        0.995: 59.2,\n        0.99: 61.75,\n        0.975: 65.65,\n        0.95: 69.13,\n        0.9: 73.29,\n        0.5: 89.33,\n        0.1: 107.57,\n        0.05: 113.14,\n        0.025: 118.14,\n        0.01: 124.12,\n        0.005: 128.3\n    },\n    100: {\n        0.995: 67.33,\n        0.99: 70.06,\n        0.975: 74.22,\n        0.95: 77.93,\n        0.9: 82.36,\n        0.5: 99.33,\n        0.1: 118.5,\n        0.05: 124.34,\n        0.025: 129.56,\n        0.01: 135.81,\n        0.005: 140.17\n    }\n};\n\n/**\n * The [χ2 (Chi-Squared) Goodness-of-Fit Test](http://en.wikipedia.org/wiki/Goodness_of_fit#Pearson.27s_chi-squared_test)\n * uses a measure of goodness of fit which is the sum of differences between observed and expected outcome frequencies\n * (that is, counts of observations), each squared and divided by the number of observations expected given the\n * hypothesized distribution. The resulting χ2 statistic, `chiSquared`, can be compared to the chi-squared distribution\n * to determine the goodness of fit. In order to determine the degrees of freedom of the chi-squared distribution, one\n * takes the total number of observed frequencies and subtracts the number of estimated parameters. The test statistic\n * follows, approximately, a chi-square distribution with (k − c) degrees of freedom where `k` is the number of non-empty\n * cells and `c` is the number of estimated parameters for the distribution.\n *\n * @param {Array<number>} data\n * @param {Function} distributionType a function that returns a point in a distribution:\n * for instance, binomial, bernoulli, or poisson\n * @param {number} significance\n * @returns {number} chi squared goodness of fit\n * @example\n * // Data from Poisson goodness-of-fit example 10-19 in William W. Hines & Douglas C. Montgomery,\n * // \"Probability and Statistics in Engineering and Management Science\", Wiley (1980).\n * var data1019 = [\n *     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n *     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n *     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n *     2, 2, 2, 2, 2, 2, 2, 2, 2,\n *     3, 3, 3, 3\n * ];\n * ss.chiSquaredGoodnessOfFit(data1019, ss.poissonDistribution, 0.05); //= false\n */\nfunction chiSquaredGoodnessOfFit(data, distributionType, significance) {\n    // Estimate from the sample data, a weighted mean.\n    var inputMean = mean(data);\n    // Calculated value of the χ2 statistic.\n    var chiSquared = 0;\n    // Number of hypothesized distribution parameters estimated, expected to be supplied in the distribution test.\n    // Lose one degree of freedom for estimating `lambda` from the sample data.\n    var c = 1;\n    // The hypothesized distribution.\n    // Generate the hypothesized distribution.\n    var hypothesizedDistribution = distributionType(inputMean);\n    var observedFrequencies = [];\n    var expectedFrequencies = [];\n\n    // Create an array holding a histogram from the sample data, of\n    // the form `{ value: numberOfOcurrences }`\n    for (var i = 0; i < data.length; i++) {\n        if (observedFrequencies[data[i]] === undefined) {\n            observedFrequencies[data[i]] = 0;\n        }\n        observedFrequencies[data[i]]++;\n    }\n\n    // The histogram we created might be sparse - there might be gaps\n    // between values. So we iterate through the histogram, making\n    // sure that instead of undefined, gaps have 0 values.\n    for (var i$1 = 0; i$1 < observedFrequencies.length; i$1++) {\n        if (observedFrequencies[i$1] === undefined) {\n            observedFrequencies[i$1] = 0;\n        }\n    }\n\n    // Create an array holding a histogram of expected data given the\n    // sample size and hypothesized distribution.\n    for (var k in hypothesizedDistribution) {\n        if (k in observedFrequencies) {\n            expectedFrequencies[+k] = hypothesizedDistribution[k] * data.length;\n        }\n    }\n\n    // Working backward through the expected frequencies, collapse classes\n    // if less than three observations are expected for a class.\n    // This transformation is applied to the observed frequencies as well.\n    for (var k$1 = expectedFrequencies.length - 1; k$1 >= 0; k$1--) {\n        if (expectedFrequencies[k$1] < 3) {\n            expectedFrequencies[k$1 - 1] += expectedFrequencies[k$1];\n            expectedFrequencies.pop();\n\n            observedFrequencies[k$1 - 1] += observedFrequencies[k$1];\n            observedFrequencies.pop();\n        }\n    }\n\n    // Iterate through the squared differences between observed & expected\n    // frequencies, accumulating the `chiSquared` statistic.\n    for (var k$2 = 0; k$2 < observedFrequencies.length; k$2++) {\n        chiSquared +=\n            Math.pow(observedFrequencies[k$2] - expectedFrequencies[k$2], 2) /\n            expectedFrequencies[k$2];\n    }\n\n    // Calculate degrees of freedom for this test and look it up in the\n    // `chiSquaredDistributionTable` in order to\n    // accept or reject the goodness-of-fit of the hypothesized distribution.\n    // Degrees of freedom, calculated as (number of class intervals -\n    // number of hypothesized distribution parameters estimated - 1)\n    var degreesOfFreedom = observedFrequencies.length - c - 1;\n    return (\n        chiSquaredDistributionTable[degreesOfFreedom][significance] < chiSquared\n    );\n}\n\nvar SQRT_2PI$1 = Math.sqrt(2 * Math.PI);\n\n/**\n * [Well-known kernels](https://en.wikipedia.org/wiki/Kernel_(statistics)#Kernel_functions_in_common_use)\n * @private\n */\nvar kernels = {\n    /**\n     * The gaussian kernel.\n     * @private\n     */\n    gaussian: function (u) {\n        return Math.exp(-0.5 * u * u) / SQRT_2PI$1;\n    }\n};\n\n/**\n * Well known bandwidth selection methods\n * @private\n */\nvar bandwidthMethods = {\n    /**\n     * The [\"normal reference distribution\"\n     * rule-of-thumb](https://stat.ethz.ch/R-manual/R-devel/library/MASS/html/bandwidth.nrd.html),\n     * a commonly used version of [Silverman's\n     * rule-of-thumb](https://en.wikipedia.org/wiki/Kernel_density_estimation#A_rule-of-thumb_bandwidth_estimator).\n     * @private\n     */\n    nrd: function (x) {\n        var s = sampleStandardDeviation(x);\n        var iqr = interquartileRange(x);\n        if (typeof iqr === \"number\") {\n            s = Math.min(s, iqr / 1.34);\n        }\n        return 1.06 * s * Math.pow(x.length, -0.2);\n    }\n};\n\n/**\n * [Kernel density estimation](https://en.wikipedia.org/wiki/Kernel_density_estimation)\n * is a useful tool for, among other things, estimating the shape of the\n * underlying probability distribution from a sample.\n *\n * @name kernelDensityEstimation\n * @param X sample values\n * @param kernel The kernel function to use. If a function is provided, it should return non-negative values and integrate to 1. Defaults to 'gaussian'.\n * @param bandwidthMethod The \"bandwidth selection\" method to use, or a fixed bandwidth value. Defaults to \"nrd\", the commonly-used [\"normal reference distribution\" rule-of-thumb](https://stat.ethz.ch/R-manual/R-devel/library/MASS/html/bandwidth.nrd.html).\n * @returns {Function} An estimated [probability density function](https://en.wikipedia.org/wiki/Probability_density_function) for the given sample. The returned function runs in `O(X.length)`.\n */\nfunction kernelDensityEstimation(X, kernel, bandwidthMethod) {\n    var kernelFn;\n    if (kernel === undefined) {\n        kernelFn = kernels.gaussian;\n    } else if (typeof kernel === \"string\") {\n        if (!kernels[kernel]) {\n            throw new Error('Unknown kernel \"' + kernel + '\"');\n        }\n        kernelFn = kernels[kernel];\n    } else {\n        kernelFn = kernel;\n    }\n\n    var bandwidth;\n    if (typeof bandwidthMethod === \"undefined\") {\n        bandwidth = bandwidthMethods.nrd(X);\n    } else if (typeof bandwidthMethod === \"string\") {\n        if (!bandwidthMethods[bandwidthMethod]) {\n            throw new Error(\n                'Unknown bandwidth method \"' + bandwidthMethod + '\"'\n            );\n        }\n        bandwidth = bandwidthMethods[bandwidthMethod](X);\n    } else {\n        bandwidth = bandwidthMethod;\n    }\n\n    return function (x) {\n        var i = 0;\n        var sum = 0;\n        for (i = 0; i < X.length; i++) {\n            sum += kernelFn((x - X[i]) / bandwidth);\n        }\n        return sum / bandwidth / X.length;\n    };\n}\n\n/**\n * The [Z-Score, or Standard Score](http://en.wikipedia.org/wiki/Standard_score).\n *\n * The standard score is the number of standard deviations an observation\n * or datum is above or below the mean. Thus, a positive standard score\n * represents a datum above the mean, while a negative standard score\n * represents a datum below the mean. It is a dimensionless quantity\n * obtained by subtracting the population mean from an individual raw\n * score and then dividing the difference by the population standard\n * deviation.\n *\n * The z-score is only defined if one knows the population parameters;\n * if one only has a sample set, then the analogous computation with\n * sample mean and sample standard deviation yields the\n * Student's t-statistic.\n *\n * @param {number} x\n * @param {number} mean\n * @param {number} standardDeviation\n * @return {number} z score\n * @example\n * zScore(78, 80, 5); // => -0.4\n */\nfunction zScore(x, mean, standardDeviation) {\n    return (x - mean) / standardDeviation;\n}\n\nvar SQRT_2PI = Math.sqrt(2 * Math.PI);\n\nfunction cumulativeDistribution(z) {\n    var sum = z,\n        tmp = z;\n\n    // 15 iterations are enough for 4-digit precision\n    for (var i = 1; i < 15; i++) {\n        tmp *= (z * z) / (2 * i + 1);\n        sum += tmp;\n    }\n    return (\n        Math.round((0.5 + (sum / SQRT_2PI) * Math.exp((-z * z) / 2)) * 1e4) /\n        1e4\n    );\n}\n\n/**\n * A standard normal table, also called the unit normal table or Z table,\n * is a mathematical table for the values of Φ (phi), which are the values of\n * the [cumulative distribution function](https://en.wikipedia.org/wiki/Normal_distribution#Cumulative_distribution_function)\n * of the normal distribution. It is used to find the probability that a\n * statistic is observed below, above, or between values on the standard\n * normal distribution, and by extension, any normal distribution.\n */\nvar standardNormalTable = [];\n\nfor (var z = 0; z <= 3.09; z += 0.01) {\n    standardNormalTable.push(cumulativeDistribution(z));\n}\n\n/**\n * **[Cumulative Standard Normal Probability](http://en.wikipedia.org/wiki/Standard_normal_table)**\n *\n * Since probability tables cannot be\n * printed for every normal distribution, as there are an infinite variety\n * of normal distributions, it is common practice to convert a normal to a\n * standard normal and then use the standard normal table to find probabilities.\n *\n * You can use `.5 + .5 * errorFunction(x / Math.sqrt(2))` to calculate the probability\n * instead of looking it up in a table.\n *\n * @param {number} z\n * @returns {number} cumulative standard normal probability\n */\nfunction cumulativeStdNormalProbability(z) {\n    // Calculate the position of this value.\n    var absZ = Math.abs(z);\n    // Each row begins with a different\n    // significant digit: 0.5, 0.6, 0.7, and so on. Each value in the table\n    // corresponds to a range of 0.01 in the input values, so the value is\n    // multiplied by 100.\n    var index = Math.min(\n        Math.round(absZ * 100),\n        standardNormalTable.length - 1\n    );\n\n    // The index we calculate must be in the table as a positive value,\n    // but we still pay attention to whether the input is positive\n    // or negative, and flip the output value as a last step.\n    if (z >= 0) {\n        return standardNormalTable[index];\n    } else {\n        // due to floating-point arithmetic, values in the table with\n        // 4 significant figures can nevertheless end up as repeating\n        // fractions when they're computed here.\n        return +(1 - standardNormalTable[index]).toFixed(4);\n    }\n}\n\n/**\n * **[Logistic Cumulative Distribution Function](https://en.wikipedia.org/wiki/Logistic_distribution)**\n *\n * @param {number} x\n * @returns {number} cumulative standard logistic probability\n */\nfunction cumulativeStdLogisticProbability(x) {\n    return 1 / (Math.exp(-x) + 1);\n}\n\n/**\n * **[Gaussian error function](http://en.wikipedia.org/wiki/Error_function)**\n *\n * The `errorFunction(x/(sd * Math.sqrt(2)))` is the probability that a value in a\n * normal distribution with standard deviation sd is within x of the mean.\n *\n * This function returns a numerical approximation to the exact value.\n * It uses Horner's method to evaluate the polynomial of τ (tau).\n *\n * @param {number} x input\n * @return {number} error estimation\n * @example\n * errorFunction(1).toFixed(2); // => '0.84'\n */\nfunction errorFunction(x) {\n    var t = 1 / (1 + 0.5 * Math.abs(x));\n    var tau =\n        t *\n        Math.exp(\n            -x * x +\n                ((((((((0.17087277 * t - 0.82215223) * t + 1.48851587) * t -\n                    1.13520398) *\n                    t +\n                    0.27886807) *\n                    t -\n                    0.18628806) *\n                    t +\n                    0.09678418) *\n                    t +\n                    0.37409196) *\n                    t +\n                    1.00002368) *\n                    t -\n                1.26551223\n        );\n    if (x >= 0) {\n        return 1 - tau;\n    } else {\n        return tau - 1;\n    }\n}\n\n/**\n * The Inverse [Gaussian error function](http://en.wikipedia.org/wiki/Error_function)\n * returns a numerical approximation to the value that would have caused\n * `errorFunction()` to return x.\n *\n * @param {number} x value of error function\n * @returns {number} estimated inverted value\n */\nfunction inverseErrorFunction(x) {\n    var a = (8 * (Math.PI - 3)) / (3 * Math.PI * (4 - Math.PI));\n\n    var inv = Math.sqrt(\n        Math.sqrt(\n            Math.pow(2 / (Math.PI * a) + Math.log(1 - x * x) / 2, 2) -\n                Math.log(1 - x * x) / a\n        ) -\n            (2 / (Math.PI * a) + Math.log(1 - x * x) / 2)\n    );\n\n    if (x >= 0) {\n        return inv;\n    } else {\n        return -inv;\n    }\n}\n\n/**\n * The [Probit](http://en.wikipedia.org/wiki/Probit)\n * is the inverse of cumulativeStdNormalProbability(),\n * and is also known as the normal quantile function.\n *\n * It returns the number of standard deviations from the mean\n * where the p'th quantile of values can be found in a normal distribution.\n * So, for example, probit(0.5 + 0.6827/2) ≈ 1 because 68.27% of values are\n * normally found within 1 standard deviation above or below the mean.\n *\n * @param {number} p\n * @returns {number} probit\n */\nfunction probit(p) {\n    if (p === 0) {\n        p = epsilon;\n    } else if (p >= 1) {\n        p = 1 - epsilon;\n    }\n    return Math.sqrt(2) * inverseErrorFunction(2 * p - 1);\n}\n\n/**\n * The [Logit](https://en.wikipedia.org/wiki/Logit)\n * is the inverse of cumulativeStdLogisticProbability,\n * and is also known as the logistic quantile function.\n *\n * @param {number} p\n * @returns {number} logit\n */\nfunction logit(p) {\n    if (p <= 0 || p >= 1) {\n        throw new Error(\"p must be strictly between zero and one\");\n    }\n    return Math.log(p / (1 - p));\n}\n\n/**\n * Conducts a [permutation test](https://en.wikipedia.org/wiki/Resampling_(statistics)#Permutation_tests)\n * to determine if two data sets are *significantly* different from each other, using\n * the difference of means between the groups as the test statistic.\n * The function allows for the following hypotheses:\n * - two_tail = Null hypothesis: the two distributions are equal.\n * - greater = Null hypothesis: observations from sampleX tend to be smaller than those from sampleY.\n * - less = Null hypothesis: observations from sampleX tend to be greater than those from sampleY.\n * [Learn more about one-tail vs two-tail tests.](https://en.wikipedia.org/wiki/One-_and_two-tailed_tests)\n *\n * @param {Array<number>} sampleX first dataset (e.g. treatment data)\n * @param {Array<number>} sampleY second dataset (e.g. control data)\n * @param {string} alternative alternative hypothesis, either 'two_sided' (default), 'greater', or 'less'\n * @param {number} k number of values in permutation distribution.\n * @param {Function} [randomSource=Math.random] an optional entropy source\n * @returns {number} p-value The probability of observing the difference between groups (as or more extreme than what we did), assuming the null hypothesis.\n *\n * @example\n * var control = [2, 5, 3, 6, 7, 2, 5];\n * var treatment = [20, 5, 13, 12, 7, 2, 2];\n * permutationTest(control, treatment); // ~0.1324\n */\nfunction permutationTest(sampleX, sampleY, alternative, k, randomSource) {\n    // Set default arguments\n    if (k === undefined) {\n        k = 10000;\n    }\n    if (alternative === undefined) {\n        alternative = \"two_side\";\n    }\n    if (\n        alternative !== \"two_side\" &&\n        alternative !== \"greater\" &&\n        alternative !== \"less\"\n    ) {\n        throw new Error(\n            \"`alternative` must be either 'two_side', 'greater', or 'less'\"\n        );\n    }\n\n    // get means for each sample\n    var meanX = mean(sampleX);\n    var meanY = mean(sampleY);\n\n    // calculate initial test statistic. This will be our point of comparison with\n    // the generated test statistics.\n    var testStatistic = meanX - meanY;\n\n    // create test-statistic distribution\n    var testStatDsn = new Array(k);\n\n    // combine datsets so we can easily shuffle later\n    var allData = sampleX.concat(sampleY);\n    var midIndex = Math.floor(allData.length / 2);\n\n    for (var i = 0; i < k; i++) {\n        // 1. shuffle data assignments\n        shuffleInPlace(allData, randomSource);\n        var permLeft = allData.slice(0, midIndex);\n        var permRight = allData.slice(midIndex, allData.length);\n\n        // 2.re-calculate test statistic\n        var permTestStatistic = mean(permLeft) - mean(permRight);\n\n        // 3. store test statistic to build test statistic distribution\n        testStatDsn[i] = permTestStatistic;\n    }\n\n    // Calculate p-value depending on alternative\n    // For this test, we calculate the percentage of 'extreme' test statistics (subject to our hypothesis)\n    // more info on permutation test p-value calculations: https://onlinecourses.science.psu.edu/stat464/node/35\n    var numExtremeTStats = 0;\n    if (alternative === \"two_side\") {\n        for (var i$1 = 0; i$1 <= k; i$1++) {\n            if (Math.abs(testStatDsn[i$1]) >= Math.abs(testStatistic)) {\n                numExtremeTStats += 1;\n            }\n        }\n    } else if (alternative === \"greater\") {\n        for (var i$2 = 0; i$2 <= k; i$2++) {\n            if (testStatDsn[i$2] >= testStatistic) {\n                numExtremeTStats += 1;\n            }\n        }\n    } else {\n        // alternative === 'less'\n        for (var i$3 = 0; i$3 <= k; i$3++) {\n            if (testStatDsn[i$3] <= testStatistic) {\n                numExtremeTStats += 1;\n            }\n        }\n    }\n\n    return numExtremeTStats / k;\n}\n\n/**\n * [Sign](https://en.wikipedia.org/wiki/Sign_function) is a function\n * that extracts the sign of a real number\n *\n * @param {number} x input value\n * @returns {number} sign value either 1, 0 or -1\n * @throws {TypeError} if the input argument x is not a number\n * @private\n *\n * @example\n * sign(2); // => 1\n */\nfunction sign(x) {\n    if (typeof x === \"number\") {\n        if (x < 0) {\n            return -1;\n        } else if (x === 0) {\n            return 0;\n        } else {\n            return 1;\n        }\n    } else {\n        throw new TypeError(\"not a number\");\n    }\n}\n\n/**\n * [Bisection method](https://en.wikipedia.org/wiki/Bisection_method) is a root-finding\n * method that repeatedly bisects an interval to find the root.\n *\n * This function returns a numerical approximation to the exact value.\n *\n * @param {Function} func input function\n * @param {number} start - start of interval\n * @param {number} end - end of interval\n * @param {number} maxIterations - the maximum number of iterations\n * @param {number} errorTolerance - the error tolerance\n * @returns {number} estimated root value\n * @throws {TypeError} Argument func must be a function\n *\n * @example\n * bisect(Math.cos,0,4,100,0.003); // => 1.572265625\n */\nfunction bisect(func, start, end, maxIterations, errorTolerance) {\n    if (typeof func !== \"function\")\n        { throw new TypeError(\"func must be a function\"); }\n\n    for (var i = 0; i < maxIterations; i++) {\n        var output = (start + end) / 2;\n\n        if (\n            func(output) === 0 ||\n            Math.abs((end - start) / 2) < errorTolerance\n        ) {\n            return output;\n        }\n\n        if (sign(func(output)) === sign(func(start))) {\n            start = output;\n        } else {\n            end = output;\n        }\n    }\n\n    throw new Error(\"maximum number of iterations exceeded\");\n}\n\n/**\n * Calculate Euclidean distance between two points.\n * @param {Array<number>} left First N-dimensional point.\n * @param {Array<number>} right Second N-dimensional point.\n * @returns {number} Distance.\n */\nfunction euclideanDistance(left, right) {\n    var sum = 0;\n    for (var i = 0; i < left.length; i++) {\n        var diff = left[i] - right[i];\n        sum += diff * diff;\n    }\n    return Math.sqrt(sum);\n}\n\n/**\n * @typedef {Object} kMeansReturn\n * @property {Array<number>} labels The labels.\n * @property {Array<Array<number>>} centroids The cluster centroids.\n */\n\n/**\n * Perform k-means clustering.\n *\n * @param {Array<Array<number>>} points N-dimensional coordinates of points to be clustered.\n * @param {number} numCluster How many clusters to create.\n * @param {Function} randomSource An optional entropy source that generates uniform values in [0, 1).\n * @return {kMeansReturn} Labels (same length as data) and centroids (same length as numCluster).\n * @throws {Error} If any centroids wind up friendless (i.e., without associated points).\n *\n * @example\n * kMeansCluster([[0.0, 0.5], [1.0, 0.5]], 2); // => {labels: [0, 1], centroids: [[0.0, 0.5], [1.0 0.5]]}\n */\nfunction kMeansCluster(points, numCluster, randomSource) {\n    if ( randomSource === void 0 ) randomSource = Math.random;\n\n    var oldCentroids = null;\n    var newCentroids = sample(points, numCluster, randomSource);\n    var labels = null;\n    var change = Number.MAX_VALUE;\n    while (change !== 0) {\n        labels = labelPoints(points, newCentroids);\n        oldCentroids = newCentroids;\n        newCentroids = calculateCentroids(points, labels, numCluster);\n        change = calculateChange(newCentroids, oldCentroids);\n    }\n    return {\n        labels: labels,\n        centroids: newCentroids\n    };\n}\n\n/**\n * Label each point according to which centroid it is closest to.\n *\n * @private\n * @param {Array<Array<number>>} points Array of XY coordinates.\n * @param {Array<Array<number>>} centroids Current centroids.\n * @return {Array<number>} Group labels.\n */\nfunction labelPoints(points, centroids) {\n    return points.map(function (p) {\n        var minDist = Number.MAX_VALUE;\n        var label = -1;\n        for (var i = 0; i < centroids.length; i++) {\n            var dist = euclideanDistance(p, centroids[i]);\n            if (dist < minDist) {\n                minDist = dist;\n                label = i;\n            }\n        }\n        return label;\n    });\n}\n\n/**\n * Calculate centroids for points given labels.\n *\n * @private\n * @param {Array<Array<number>>} points Array of XY coordinates.\n * @param {Array<number>} labels Which groups points belong to.\n * @param {number} numCluster Number of clusters being created.\n * @return {Array<Array<number>>} Centroid for each group.\n * @throws {Error} If any centroids wind up friendless (i.e., without associated points).\n */\nfunction calculateCentroids(points, labels, numCluster) {\n    // Initialize accumulators.\n    var dimension = points[0].length;\n    var centroids = makeMatrix(numCluster, dimension);\n    var counts = Array(numCluster).fill(0);\n\n    // Add points to centroids' accumulators and count points per centroid.\n    var numPoints = points.length;\n    for (var i = 0; i < numPoints; i++) {\n        var point = points[i];\n        var label = labels[i];\n        var current = centroids[label];\n        for (var j = 0; j < dimension; j++) {\n            current[j] += point[j];\n        }\n        counts[label] += 1;\n    }\n\n    // Rescale centroids, checking for any that have no points.\n    for (var i$1 = 0; i$1 < numCluster; i$1++) {\n        if (counts[i$1] === 0) {\n            throw new Error((\"Centroid \" + i$1 + \" has no friends\"));\n        }\n        var centroid = centroids[i$1];\n        for (var j$1 = 0; j$1 < dimension; j$1++) {\n            centroid[j$1] /= counts[i$1];\n        }\n    }\n\n    return centroids;\n}\n\n/**\n * Calculate the difference between old centroids and new centroids.\n *\n * @private\n * @param {Array<Array<number>>} left One list of centroids.\n * @param {Array<Array<number>>} right Another list of centroids.\n * @return {number} Distance between centroids.\n */\nfunction calculateChange(left, right) {\n    var total = 0;\n    for (var i = 0; i < left.length; i++) {\n        total += euclideanDistance(left[i], right[i]);\n    }\n    return total;\n}\n\n/**\n * Calculate the [silhouette values](https://en.wikipedia.org/wiki/Silhouette_(clustering))\n * for clustered data.\n *\n * @param {Array<Array<number>>} points N-dimensional coordinates of points.\n * @param {Array<number>} labels Labels of points. This must be the same length as `points`,\n * and values must lie in [0..G-1], where G is the number of groups.\n * @return {Array<number>} The silhouette value for each point.\n *\n * @example\n * silhouette([[0.25], [0.75]], [0, 0]); // => [1.0, 1.0]\n */\nfunction silhouette(points, labels) {\n    if (points.length !== labels.length) {\n        throw new Error(\"must have exactly as many labels as points\");\n    }\n    var groupings = createGroups(labels);\n    var distances = calculateAllDistances(points);\n    var result = [];\n    for (var i = 0; i < points.length; i++) {\n        var s = 0;\n        if (groupings[labels[i]].length > 1) {\n            var a = meanDistanceFromPointToGroup(\n                i,\n                groupings[labels[i]],\n                distances\n            );\n            var b = meanDistanceToNearestGroup(\n                i,\n                labels,\n                groupings,\n                distances\n            );\n            s = (b - a) / Math.max(a, b);\n        }\n        result.push(s);\n    }\n    return result;\n}\n\n/**\n * Create a lookup table mapping group IDs to point IDs.\n *\n * @private\n * @param {Array<number>} labels Labels of points. This must be the same length as `points`,\n * and values must lie in [0..G-1], where G is the number of groups.\n * @return {Array<Array<number>>} An array of length G, each of whose entries is an array\n * containing the indices of the points in that group.\n */\nfunction createGroups(labels) {\n    var numGroups = 1 + max(labels);\n    var result = Array(numGroups);\n    for (var i = 0; i < labels.length; i++) {\n        var label = labels[i];\n        if (result[label] === undefined) {\n            result[label] = [];\n        }\n        result[label].push(i);\n    }\n    return result;\n}\n\n/**\n * Create a lookup table of all inter-point distances.\n *\n * @private\n * @param {Array<Array<number>>} points N-dimensional coordinates of points.\n * @return {Array<Array<number>>} A symmetric square array of inter-point distances\n * (zero on the diagonal).\n */\nfunction calculateAllDistances(points) {\n    var numPoints = points.length;\n    var result = makeMatrix(numPoints, numPoints);\n    for (var i = 0; i < numPoints; i++) {\n        for (var j = 0; j < i; j++) {\n            result[i][j] = euclideanDistance(points[i], points[j]);\n            result[j][i] = result[i][j];\n        }\n    }\n    return result;\n}\n\n/**\n * Calculate the mean distance between this point and all the points in the\n * nearest group (as determined by which point in another group is closest).\n *\n * @private\n * @param {number} which The index of this point.\n * @param {Array<number>} labels Labels of points.\n * @param {Array<Array<number>>} groupings An array whose entries are arrays\n * containing the indices of the points in that group.\n * @param {Array<Array<number>>} distances A symmetric square array of inter-point\n * distances.\n * @return {number} The mean distance from this point to others in the nearest\n * group.\n */\nfunction meanDistanceToNearestGroup(which, labels, groupings, distances) {\n    var label = labels[which];\n    var result = Number.MAX_VALUE;\n    for (var i = 0; i < groupings.length; i++) {\n        if (i !== label) {\n            var d = meanDistanceFromPointToGroup(\n                which,\n                groupings[i],\n                distances\n            );\n            if (d < result) {\n                result = d;\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * Calculate the mean distance between a point and all the points in a group\n * (possibly its own).\n *\n * @private\n * @param {number} which The index of this point.\n * @param {Array<number>} group The indices of all the points in the group in\n * question.\n * @param {Array<Array<number>>} distances A symmetric square array of inter-point\n * distances.\n * @return {number} The mean distance from this point to others in the\n * specified group.\n */\nfunction meanDistanceFromPointToGroup(which, group, distances) {\n    var total = 0;\n    for (var i = 0; i < group.length; i++) {\n        total += distances[which][group[i]];\n    }\n    return total / group.length;\n}\n\n/**\n * Calculate the [silhouette metric](https://en.wikipedia.org/wiki/Silhouette_(clustering))\n * for a set of N-dimensional points arranged in groups. The metric is the largest\n * individual silhouette value for the data.\n *\n * @param {Array<Array<number>>} points N-dimensional coordinates of points.\n * @param {Array<number>} labels Labels of points. This must be the same length as `points`,\n * and values must lie in [0..G-1], where G is the number of groups.\n * @return {number} The silhouette metric for the groupings.\n *\n * @example\n * silhouetteMetric([[0.25], [0.75]], [0, 0]); // => 1.0\n */\nfunction silhouetteMetric(points, labels) {\n    var values = silhouette(points, labels);\n    return max(values);\n}\n\n/**\n * Relative error.\n *\n * This is more difficult to calculate than it first appears [1,2].  The usual\n * formula for the relative error between an actual value A and an expected\n * value E is `|(A-E)/E|`, but:\n *\n * 1. If the expected value is 0, any other value has infinite relative error,\n *    which is counter-intuitive: if the expected voltage is 0, getting 1/10th\n *    of a volt doesn't feel like an infinitely large error.\n *\n * 2. This formula does not satisfy the mathematical definition of a metric [3].\n *    [4] solved this problem by defining the relative error as `|ln(|A/E|)|`,\n *    but that formula only works if all values are positive: for example, it\n *    reports the relative error of -10 and 10 as 0.\n *\n * Our implementation sticks with convention and returns:\n *\n * - 0 if the actual and expected values are both zero\n * - Infinity if the actual value is non-zero and the expected value is zero\n * - `|(A-E)/E|` in all other cases\n *\n * [1] https://math.stackexchange.com/questions/677852/how-to-calculate-relative-error-when-true-value-is-zero\n * [2] https://en.wikipedia.org/wiki/Relative_change_and_difference\n * [3] https://en.wikipedia.org/wiki/Metric_(mathematics)#Definition\n * [4] F.W.J. Olver: \"A New Approach to Error Arithmetic.\" SIAM Journal on\n *     Numerical Analysis, 15(2), 1978, 10.1137/0715024.\n *\n * @param {number} actual The actual value.\n * @param {number} expected The expected value.\n * @return {number} The relative error.\n */\nfunction relativeError(actual, expected) {\n    if (actual === 0 && expected === 0) {\n        return 0;\n    }\n    return Math.abs((actual - expected) / expected);\n}\n\n/**\n * Approximate equality.\n *\n * @param {number} actual The value to be tested.\n * @param {number} expected The reference value.\n * @param {number} tolerance The acceptable relative difference.\n * @return {boolean} Whether numbers are within tolerance.\n */\nfunction approxEqual(actual, expected, tolerance) {\n    if ( tolerance === void 0 ) tolerance = epsilon;\n\n    return relativeError(actual, expected) <= tolerance;\n}\n\nexports.BayesianClassifier = BayesianClassifier;\nexports.PerceptronModel = PerceptronModel;\nexports.addToMean = addToMean;\nexports.approxEqual = approxEqual;\nexports.average = mean;\nexports.averageSimple = meanSimple;\nexports.bayesian = BayesianClassifier;\nexports.bernoulliDistribution = bernoulliDistribution;\nexports.binomialDistribution = binomialDistribution;\nexports.bisect = bisect;\nexports.chiSquaredDistributionTable = chiSquaredDistributionTable;\nexports.chiSquaredGoodnessOfFit = chiSquaredGoodnessOfFit;\nexports.chunk = chunk;\nexports.ckmeans = ckmeans;\nexports.coefficientOfVariation = coefficientOfVariation;\nexports.combinations = combinations;\nexports.combinationsReplacement = combinationsReplacement;\nexports.combineMeans = combineMeans;\nexports.combineVariances = combineVariances;\nexports.cumulativeStdLogisticProbability = cumulativeStdLogisticProbability;\nexports.cumulativeStdNormalProbability = cumulativeStdNormalProbability;\nexports.epsilon = epsilon;\nexports.equalIntervalBreaks = equalIntervalBreaks;\nexports.erf = errorFunction;\nexports.errorFunction = errorFunction;\nexports.extent = extent;\nexports.extentSorted = extentSorted;\nexports.factorial = factorial;\nexports.gamma = gamma;\nexports.gammaln = gammaln;\nexports.geometricMean = geometricMean;\nexports.harmonicMean = harmonicMean;\nexports.interquartileRange = interquartileRange;\nexports.inverseErrorFunction = inverseErrorFunction;\nexports.iqr = interquartileRange;\nexports.kMeansCluster = kMeansCluster;\nexports.kde = kernelDensityEstimation;\nexports.kernelDensityEstimation = kernelDensityEstimation;\nexports.linearRegression = linearRegression;\nexports.linearRegressionLine = linearRegressionLine;\nexports.logAverage = logAverage;\nexports.logit = logit;\nexports.mad = medianAbsoluteDeviation;\nexports.max = max;\nexports.maxSorted = maxSorted;\nexports.mean = mean;\nexports.meanSimple = meanSimple;\nexports.median = median;\nexports.medianAbsoluteDeviation = medianAbsoluteDeviation;\nexports.medianSorted = medianSorted;\nexports.min = min;\nexports.minSorted = minSorted;\nexports.mode = mode;\nexports.modeFast = modeFast;\nexports.modeSorted = modeSorted;\nexports.numericSort = numericSort;\nexports.perceptron = PerceptronModel;\nexports.permutationTest = permutationTest;\nexports.permutationsHeap = permutationsHeap;\nexports.poissonDistribution = poissonDistribution;\nexports.probit = probit;\nexports.product = product;\nexports.quantile = quantile;\nexports.quantileRank = quantileRank;\nexports.quantileRankSorted = quantileRankSorted;\nexports.quantileSorted = quantileSorted;\nexports.quickselect = quickselect;\nexports.rSquared = rSquared;\nexports.relativeError = relativeError;\nexports.rms = rootMeanSquare;\nexports.rootMeanSquare = rootMeanSquare;\nexports.sample = sample;\nexports.sampleCorrelation = sampleCorrelation;\nexports.sampleCovariance = sampleCovariance;\nexports.sampleKurtosis = sampleKurtosis;\nexports.sampleRankCorrelation = sampleRankCorrelation;\nexports.sampleSkewness = sampleSkewness;\nexports.sampleStandardDeviation = sampleStandardDeviation;\nexports.sampleVariance = sampleVariance;\nexports.sampleWithReplacement = sampleWithReplacement;\nexports.shuffle = shuffle;\nexports.shuffleInPlace = shuffleInPlace;\nexports.sign = sign;\nexports.silhouette = silhouette;\nexports.silhouetteMetric = silhouetteMetric;\nexports.standardDeviation = standardDeviation;\nexports.standardNormalTable = standardNormalTable;\nexports.subtractFromMean = subtractFromMean;\nexports.sum = sum;\nexports.sumNthPowerDeviations = sumNthPowerDeviations;\nexports.sumSimple = sumSimple;\nexports.tTest = tTest;\nexports.tTestTwoSample = tTestTwoSample;\nexports.uniqueCountSorted = uniqueCountSorted;\nexports.variance = variance;\nexports.wilcoxonRankSum = wilcoxonRankSum;\nexports.zScore = zScore;\n//# sourceMappingURL=simple-statistics.js.map\n","import { UndirectedGraph } from \"graphology\";\nimport circularLayout from \"graphology-layout/circular\";\nimport { scaleLinear } from \"d3-scale\";\nimport { extent } from \"simple-statistics\";\n\nimport Sigma from \"sigma\";\nimport { animateNodes } from \"sigma/utils/animate\";\n\nimport miserables from \"./resources/les-miserables.json\";\nimport { globalize } from \"./utils\";\n\nconst graph = new UndirectedGraph();\n\n// Prepare data:\nconst nodeSizeExtent = extent(miserables.nodes.map((n) => n.size));\nconst xExtent = extent(miserables.nodes.map((n) => n.x));\nconst yExtent = extent(miserables.nodes.map((n) => n.y));\n\nconst nodeSizeScale = scaleLinear().domain(nodeSizeExtent).range([3, 15]);\nconst xScale = scaleLinear().domain(xExtent).range([0, 1]);\nconst yScale = scaleLinear().domain(yExtent).range([0, 1]);\n\nmiserables.nodes.forEach((node: { x: number; y: number; size: number }) => {\n  node.size = nodeSizeScale(node.size) as number;\n  node.x = xScale(node.x) as number;\n  node.y = yScale(node.y) as number;\n});\n\nmiserables.nodes.forEach((node, i) => {\n  graph.addNode(i, node);\n});\n\nmiserables.edges.forEach((edge) => {\n  graph.addEdge(+edge.source, +edge.target, { color: \"#ccc\" });\n});\n\nconst container = document.getElementById(\"container\");\n\nconst renderer = new Sigma(graph, container);\n\nconst initial: Record<string, { x: number; y: number }> = {};\n\nmiserables.nodes.forEach((node: { size: number; x: number; y: number }, i) => {\n  initial[i] = {\n    x: node.x,\n    y: node.y,\n  };\n});\n\nconst circle = circularLayout(graph);\n\nlet state = false;\n\nfunction loop() {\n  const l = state ? initial : circle;\n\n  animateNodes(graph, l, { duration: 2000 }, () => {\n    state = !state;\n    loop();\n  });\n}\n\nloop();\n\nglobalize({ graph, renderer });\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t900: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [351], () => (__webpack_require__(7108)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}